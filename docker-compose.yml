version: "3"
services:
  reverse_proxy:
    build:
      context: .
      args:
        executable: reverse_proxy
    environment:
      RP_HTTP_ADDRESS: ":8080"
      RP_LOGS_DIR: "/logs"
      RP_DB_USER: "user"
      RP_DB_PASSWORD: "password"
      RP_DB_HOST: "db_users:5432"
      RP_DB_NAME: "postgres"
      RP_DB_SSL: "false"
    ports:
      - "8080:8080"
    volumes:
      - "./logs:/logs"
    depends_on:
      - db_users
    restart: always


  user_manager:
    build:
      context: .
      args:
        executable: user_manager
    environment:
      UM_HTTP_ADDRESS: ":8081"
      UM_GRPC_ADDRESS: ":8082"
      UM_LOGS_DIR: "/logs"
      UM_DB_USER: "user"
      UM_DB_PASSWORD: "password"
      UM_DB_HOST: "db_users:5432"
      UM_DB_NAME: "postgres"
      UM_DB_SSL: "false"
    ports:
      - "8081:8081"
      - "8082:8082"
    volumes:
      - "./logs:/logs"
    depends_on:
      - db_users
    restart: always

  db_users:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    volumes:
      - "data-users:/var/lib/postgresql/data"


  resource_manager:
    build:
      context: .
      args:
        executable: resource_manager
    environment:
      RM_HTTP_BIND_ADDRESS: ":8083"
      RM_GRPC_BIND_ADDRESS: ":8084"
      RM_DM_ADDRESS: ":8085"
      RM_POSTGRES_ADDRESS: "host=db_resource_manager port=5432 user=user password=password dbname=postgres sslmode=disable"
      RM_LOG_FILE: "./logs/rm.log"
    volumes:
      - "./logs:/logs"
    ports:
      - "8083:8083"
      - "8084:8084"
    depends_on:
      - db_resource_manager
    restart: always

  db_resource_manager:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    ports:
      - "55432:5432"
    volumes:
      - "data-resource-manager:/var/lib/postgresql/data"


  agent:
    build:
      context: .
      dockerfile: ./Dockerfile.agent
    environment:
        LogsDirectory: "./logs/"
        SKY_NO_LOGFILES: 1
        SKY_RM_ADDR: "resource_manager:8084"
        SKY_RM_TOKEN: "ABCD"
    volumes:
      - "./logs:/logs"
    restart: always


  data_manager_master:
    build:
      context: .
      args:
        executable: master
    environment:
      DM_MASTER_HTTP_BIND_ADDRESS: ":8085"
      DM_MASTER_GRPC_BIND_ADDRESS: ":8086"
      DM_MASTER_POSTGRES_ADDRESS: "host=db_data_manager port=5432 user=user password=password dbname=postgres sslmode=disable"
    ports:
      - "8085:8085"
      - "8086:8086"
    depends_on:
      - db_data_manager
    restart: always

  db_data_manager:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    volumes:
      - "data-data-manager:/var/lib/postgresql/data"

  data_manager_node:
    build:
      context: .
      args:
        executable: node
    environment:
      DM_NODE_HTTP_BIND_ADDRESS: ":8087"
      DM_NODE_ACCESS_ADDRESS: "localhost:8080"
      DM_NODE_MASTER_ADDRESS: "data_manager_master:8086"
      DM_NODE_PUSH_INTERVAL: "1s"
      DM_NODE_STORAGE_DIR: "/var/lib/data_manager/node1/storage"
    volumes:
      - "storage-data-manager:/var/lib/data_manager/node1/storage"
    ports:
      - "8087:8087"
    restart: always


  job_manager:
    build:
      context: .
      args:
        executable: job_manager
    environment:
      JM_LOG_FILE: "./logs/job_manager.log"
      JM_GRPC_BIND_ADDRESS: ":8088"
      JM_POSTGRES_ADDRESS: "host=db_job_manager port=5432 user=user password=password dbname=postgres sslmode=disable"
    volumes:
      - "./logs:/logs"
    ports:
      - "8088:8088"
    depends_on:
      - db_job_manager
    restart: always

  db_job_manager:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
    volumes:
      - "data-job-manager:/var/lib/postgresql/data"


  gateway:
    build:
      context: .
      args:
        executable: gateway
    environment:
      GW_LOG_FILE: "./logs/gateway.log"
      GW_BIND_ADDRESS: ":8089"
      GW_BIND_ADDRESS: ":8089"
      GW_JM_ADDRESS: "job_manager:8088"
      GW_RM_ADDRESS: "data_manager:8086"
    ports:
      - "8089:8089"
    volumes:
      - "./logs:/logs"
    restart: always


volumes:
  data-users:
  data-resource-manager:
  data-data-manager:
  data-job-manager:
  storage-data-manager:
