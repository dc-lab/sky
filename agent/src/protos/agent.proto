syntax = "proto2";

package protobuf;

service ResourceManager {
    rpc Send (stream TFromAgentMessage) returns (stream TToAgentMessage) {}
}

message TTask {
    required string id = 1;
    required string execution_shell_command = 2;
    optional string requirements_shell_command = 3;
}

message THardwareData {
    required int32 cores_count = 1;
    required uint64 memory_amount = 2;
    required uint64 disk_amount = 3;
}


message TGreetings {
    required string token = 1;
}

message THardwareRequest {
}

message TTaskRequest {
    required TTask task = 1;
}

message TTaskResponse {
    required string task_id = 1;
    required TResult result = 2;
}

message TFile {
    required string id = 1;
    required string agent_relative_local_path = 2;
}

message TStageInRequest {
    required string task_id = 1;
    repeated TFile files = 2;
}

message TStageInResponse {
    required string task_id = 1;
    required TResult result = 2;
}

message TStageOutRequest {
    required string task_id = 1;
}

message TStageOutResponse {
    required string task_id = 1;
    repeated TFile task_files = 2;
}

message TToAgentMessage {
    oneof Body {
        THardwareRequest hardware_request = 1;
        TTaskRequest task_request = 2;
        TStageInRequest stage_in_request = 3;
        TStageOutRequest sage_ou_request = 4;
    }
}

message TFromAgentMessage {
    oneof Body {
        THardwareData hardware_data = 1;
        TGreetings greetings = 2;
        TTaskResponse task_response = 3;
        TStageInResponse stage_in_response = 4;
        TStageOutResponse stage_out_response = 5;
    }
}
message TResult {
    enum TResultCode {
        NONE = 0;
        WAIT = 1;
        RUN = 2;
        FAILED = 3;
        SUCCESS = 4;
    }

    enum TErrorCode {
        UNKNOWN = 0;
        INTERNAL = 1;
        INVALID_ARGUMENT = 2;
        UNAUTHENTICATED = 3;
        UNAUTHORIZED = 4;
    }

    required TResultCode result_code = 1;
    optional TErrorCode error_code = 2;
    optional string error_text = 3;
}