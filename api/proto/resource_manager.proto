syntax = "proto3";

// build *.pb.go from project root
// protoc -I. --go_out=plugins=grpc,paths=source_relative:. api/proto/resource_manager/*.proto

package pb;

import "google/api/annotations.proto";
import "api/proto/action.proto";
import "api/proto/hardware_data.proto";
import "api/proto/task_results.proto";

option go_package = "github.com/dc-lab/sky/api/proto";

// FIXME(BigRedEye): Refactor this shit
service ResourceManager {
    rpc Send (stream FromAgentMessage) returns (stream ToAgentMessage) {}

    rpc Update (ResourceRequest) returns (ResourceResponse) {}

    rpc AgentAction (RMRequest) returns (RMResponse) {}

    rpc GetResources (GetResourcesRequest) returns (GetResourcesResponse) {
        option (google.api.http) = {
            get: "/api/v1/resources"
        };
    }
}

message Task {
    string id = 1; // required
    string execution_shell_command = 2; // required
    string requirements_shell_command = 3; // optional
    string docker_image = 4; //optional
}

message Greetings {
    string token = 1; // required
}

message GreetingsValidation {
    Result result = 1; // required
}

message Permissions {
    repeated string users = 1;
    repeated string groups = 2;
}

enum EResourceType {
    RESOURCE_UNKNOWN = 0;
    SINGLE = 1;
    POOL = 2;
    CLOUD_INSTANCE = 3;
    CLOUD_TASK = 4;
}

message Resource {
    string id = 1; // required
    EResourceType type = 2; // required
    string ownerId = 3; // required
    string token = 4; // required
    Permissions permissions = 5; // required
    string name = 6; // required

    HardwareData total_resources = 7; // optional
    HardwareData available_resources = 8; // optional
}

message HardwareRequest {
}

message HardwareResponse {
    HardwareData total_hardware_data = 1;
    HardwareData free_hardware_data = 2;
}

message TaskRequest {
    Task task = 1; // required
}

message TaskResponse {
    string task_id = 1; // required
    Result result = 2; // required
    repeated TaskFile task_files = 3; // required
}

message FileOnAgent {
    string id = 1; // required
    string agent_relative_local_path = 2; // required
    string hash = 3; // required
}

message StageInRequest {
    string task_id = 1; // required
    repeated FileOnAgent files = 2;
}

message StageInResponse {
    string task_id = 1; // required
    Result result = 2; // required
}

message StageOutRequest {
    string task_id = 1; // required
    string agent_relative_local_path = 2; // required
}

message StageOutResponse {
    string task_id = 1; // required
    FileOnAgent task_file = 2; // required
}

message CancelTaskRequest {
    string task_id = 1; // required
}

message DeleteTaskRequest {
    string task_id = 1; // required
}

message CreateResourceRequest {
    Resource resource = 1; // required
}

message CreateResourceResponse {
}

message DeleteResourceRequest {
    string resource_id = 1; // required
    string user_id = 2; // required
}

message DeleteResourceResponse {
}

// FIXME(BigRedEye) ...
message ToAgentMessage {
    oneof Body {
        HardwareRequest hardware_request = 1;
        TaskRequest task_request = 2;
        StageInRequest stage_in_request = 3;
        StageOutRequest stage_out_request = 4;
        CancelTaskRequest cancel_task_request = 5;
        DeleteTaskRequest delete_task_request = 6;
        GreetingsValidation greetings_validation = 7;
    }
}

// FIXME(BigRedEye) .....
message FromAgentMessage {
    oneof Body {
        HardwareResponse hardware_response = 1;
        Greetings greetings = 2;
        TaskResponse task_response = 3;
        StageInResponse stage_in_response = 4;
        StageOutResponse stage_out_response = 5;
    }
}

// FIXME(BigRedEye) .......
message ResourceRequest {
    oneof Body {
        CreateResourceRequest create_resource_request = 1;
        DeleteResourceRequest delete_resource_request = 2;
    }
}

// FIXME(BigRedEye) .........
message ResourceResponse {
    oneof Body {
        CreateResourceResponse create_resource_response = 1;
        DeleteResourceResponse delete_resource_response = 2;
    }
}

message RMRequest {
    string resource_id = 1; // required
    ToAgentMessage real_message = 2; //required
}

// FIXME(BigRedEye) WTF?
message RMResponse {
    enum ResultCode {
        NONE = 0;
        OK = 1;
        NOT_FOUND = 2;
    }
    ResultCode result_code = 1; // required
}


message GetResourcesRequest {
    HardwareData requirements = 1; // optional
    uint32 limit = 2; // optional
}

message GetResourcesResponse {
    repeated Resource resources = 1;
}
