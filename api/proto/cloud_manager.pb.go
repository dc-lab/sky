// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: api/proto/cloud_manager.proto

// build *.pb.go from project root
// protoc -I. --go_out=plugins=grpc,paths=source_relative:. api/proto/cloud_manager/*.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TODO: describe possible errors
type AsyncCloudRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*AsyncCloudRequest_AllocateInstanceRequest
	//	*AsyncCloudRequest_DeallocateInstanceRequest
	//	*AsyncCloudRequest_StartInstanceRequest
	//	*AsyncCloudRequest_StopInstanceRequest
	//	*AsyncCloudRequest_StartTaskRequest
	//	*AsyncCloudRequest_StopTaskRequest
	//	*AsyncCloudRequest_DeployImageRequest
	Body isAsyncCloudRequest_Body `protobuf_oneof:"Body"`
}

func (x *AsyncCloudRequest) Reset() {
	*x = AsyncCloudRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncCloudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncCloudRequest) ProtoMessage() {}

func (x *AsyncCloudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncCloudRequest.ProtoReflect.Descriptor instead.
func (*AsyncCloudRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{0}
}

func (m *AsyncCloudRequest) GetBody() isAsyncCloudRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *AsyncCloudRequest) GetAllocateInstanceRequest() *AllocateInstanceRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_AllocateInstanceRequest); ok {
		return x.AllocateInstanceRequest
	}
	return nil
}

func (x *AsyncCloudRequest) GetDeallocateInstanceRequest() *DeallocateInstanceRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_DeallocateInstanceRequest); ok {
		return x.DeallocateInstanceRequest
	}
	return nil
}

func (x *AsyncCloudRequest) GetStartInstanceRequest() *StartInstanceRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_StartInstanceRequest); ok {
		return x.StartInstanceRequest
	}
	return nil
}

func (x *AsyncCloudRequest) GetStopInstanceRequest() *StopInstanceRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_StopInstanceRequest); ok {
		return x.StopInstanceRequest
	}
	return nil
}

func (x *AsyncCloudRequest) GetStartTaskRequest() *StartTaskRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_StartTaskRequest); ok {
		return x.StartTaskRequest
	}
	return nil
}

func (x *AsyncCloudRequest) GetStopTaskRequest() *StopTaskRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_StopTaskRequest); ok {
		return x.StopTaskRequest
	}
	return nil
}

func (x *AsyncCloudRequest) GetDeployImageRequest() *DeployImageRequest {
	if x, ok := x.GetBody().(*AsyncCloudRequest_DeployImageRequest); ok {
		return x.DeployImageRequest
	}
	return nil
}

type isAsyncCloudRequest_Body interface {
	isAsyncCloudRequest_Body()
}

type AsyncCloudRequest_AllocateInstanceRequest struct {
	AllocateInstanceRequest *AllocateInstanceRequest `protobuf:"bytes,1,opt,name=allocate_instance_request,json=allocateInstanceRequest,proto3,oneof"`
}

type AsyncCloudRequest_DeallocateInstanceRequest struct {
	DeallocateInstanceRequest *DeallocateInstanceRequest `protobuf:"bytes,2,opt,name=deallocate_instance_request,json=deallocateInstanceRequest,proto3,oneof"`
}

type AsyncCloudRequest_StartInstanceRequest struct {
	StartInstanceRequest *StartInstanceRequest `protobuf:"bytes,3,opt,name=start_instance_request,json=startInstanceRequest,proto3,oneof"`
}

type AsyncCloudRequest_StopInstanceRequest struct {
	StopInstanceRequest *StopInstanceRequest `protobuf:"bytes,4,opt,name=stop_instance_request,json=stopInstanceRequest,proto3,oneof"`
}

type AsyncCloudRequest_StartTaskRequest struct {
	StartTaskRequest *StartTaskRequest `protobuf:"bytes,5,opt,name=start_task_request,json=startTaskRequest,proto3,oneof"`
}

type AsyncCloudRequest_StopTaskRequest struct {
	StopTaskRequest *StopTaskRequest `protobuf:"bytes,6,opt,name=stop_task_request,json=stopTaskRequest,proto3,oneof"`
}

type AsyncCloudRequest_DeployImageRequest struct {
	DeployImageRequest *DeployImageRequest `protobuf:"bytes,7,opt,name=deploy_image_request,json=deployImageRequest,proto3,oneof"`
}

func (*AsyncCloudRequest_AllocateInstanceRequest) isAsyncCloudRequest_Body() {}

func (*AsyncCloudRequest_DeallocateInstanceRequest) isAsyncCloudRequest_Body() {}

func (*AsyncCloudRequest_StartInstanceRequest) isAsyncCloudRequest_Body() {}

func (*AsyncCloudRequest_StopInstanceRequest) isAsyncCloudRequest_Body() {}

func (*AsyncCloudRequest_StartTaskRequest) isAsyncCloudRequest_Body() {}

func (*AsyncCloudRequest_StopTaskRequest) isAsyncCloudRequest_Body() {}

func (*AsyncCloudRequest_DeployImageRequest) isAsyncCloudRequest_Body() {}

type AsyncCloudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction          *Transaction          `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	AsyncResponseContent *AsyncResponseContent `protobuf:"bytes,2,opt,name=async_response_content,json=asyncResponseContent,proto3" json:"async_response_content,omitempty"`
}

func (x *AsyncCloudResponse) Reset() {
	*x = AsyncCloudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncCloudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncCloudResponse) ProtoMessage() {}

func (x *AsyncCloudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncCloudResponse.ProtoReflect.Descriptor instead.
func (*AsyncCloudResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{1}
}

func (x *AsyncCloudResponse) GetTransaction() *Transaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *AsyncCloudResponse) GetAsyncResponseContent() *AsyncResponseContent {
	if x != nil {
		return x.AsyncResponseContent
	}
	return nil
}

type AsyncResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*AsyncResponseContent_AllocateInstanceResponseContent
	//	*AsyncResponseContent_DeallocateInstanceResponseContent
	//	*AsyncResponseContent_StartInstanceResponseContent
	//	*AsyncResponseContent_StopInstanceResponseContent
	//	*AsyncResponseContent_StartTaskResponseContent
	//	*AsyncResponseContent_StopTaskResponseContent
	//	*AsyncResponseContent_DeployImageResponseContent
	Body isAsyncResponseContent_Body `protobuf_oneof:"Body"`
}

func (x *AsyncResponseContent) Reset() {
	*x = AsyncResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AsyncResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AsyncResponseContent) ProtoMessage() {}

func (x *AsyncResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AsyncResponseContent.ProtoReflect.Descriptor instead.
func (*AsyncResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{2}
}

func (m *AsyncResponseContent) GetBody() isAsyncResponseContent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *AsyncResponseContent) GetAllocateInstanceResponseContent() *AllocateInstanceResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_AllocateInstanceResponseContent); ok {
		return x.AllocateInstanceResponseContent
	}
	return nil
}

func (x *AsyncResponseContent) GetDeallocateInstanceResponseContent() *DeallocateInstanceResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_DeallocateInstanceResponseContent); ok {
		return x.DeallocateInstanceResponseContent
	}
	return nil
}

func (x *AsyncResponseContent) GetStartInstanceResponseContent() *StartInstanceResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_StartInstanceResponseContent); ok {
		return x.StartInstanceResponseContent
	}
	return nil
}

func (x *AsyncResponseContent) GetStopInstanceResponseContent() *StopInstanceResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_StopInstanceResponseContent); ok {
		return x.StopInstanceResponseContent
	}
	return nil
}

func (x *AsyncResponseContent) GetStartTaskResponseContent() *StartTaskResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_StartTaskResponseContent); ok {
		return x.StartTaskResponseContent
	}
	return nil
}

func (x *AsyncResponseContent) GetStopTaskResponseContent() *StopTaskResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_StopTaskResponseContent); ok {
		return x.StopTaskResponseContent
	}
	return nil
}

func (x *AsyncResponseContent) GetDeployImageResponseContent() *DeployImageResponseContent {
	if x, ok := x.GetBody().(*AsyncResponseContent_DeployImageResponseContent); ok {
		return x.DeployImageResponseContent
	}
	return nil
}

type isAsyncResponseContent_Body interface {
	isAsyncResponseContent_Body()
}

type AsyncResponseContent_AllocateInstanceResponseContent struct {
	AllocateInstanceResponseContent *AllocateInstanceResponseContent `protobuf:"bytes,1,opt,name=allocate_instance_response_content,json=allocateInstanceResponseContent,proto3,oneof"`
}

type AsyncResponseContent_DeallocateInstanceResponseContent struct {
	DeallocateInstanceResponseContent *DeallocateInstanceResponseContent `protobuf:"bytes,2,opt,name=deallocate_instance_response_content,json=deallocateInstanceResponseContent,proto3,oneof"`
}

type AsyncResponseContent_StartInstanceResponseContent struct {
	StartInstanceResponseContent *StartInstanceResponseContent `protobuf:"bytes,3,opt,name=start_instance_response_content,json=startInstanceResponseContent,proto3,oneof"`
}

type AsyncResponseContent_StopInstanceResponseContent struct {
	StopInstanceResponseContent *StopInstanceResponseContent `protobuf:"bytes,4,opt,name=stop_instance_response_content,json=stopInstanceResponseContent,proto3,oneof"`
}

type AsyncResponseContent_StartTaskResponseContent struct {
	StartTaskResponseContent *StartTaskResponseContent `protobuf:"bytes,5,opt,name=start_task_response_content,json=startTaskResponseContent,proto3,oneof"`
}

type AsyncResponseContent_StopTaskResponseContent struct {
	StopTaskResponseContent *StopTaskResponseContent `protobuf:"bytes,6,opt,name=stop_task_response_content,json=stopTaskResponseContent,proto3,oneof"`
}

type AsyncResponseContent_DeployImageResponseContent struct {
	DeployImageResponseContent *DeployImageResponseContent `protobuf:"bytes,7,opt,name=deploy_image_response_content,json=deployImageResponseContent,proto3,oneof"`
}

func (*AsyncResponseContent_AllocateInstanceResponseContent) isAsyncResponseContent_Body() {}

func (*AsyncResponseContent_DeallocateInstanceResponseContent) isAsyncResponseContent_Body() {}

func (*AsyncResponseContent_StartInstanceResponseContent) isAsyncResponseContent_Body() {}

func (*AsyncResponseContent_StopInstanceResponseContent) isAsyncResponseContent_Body() {}

func (*AsyncResponseContent_StartTaskResponseContent) isAsyncResponseContent_Body() {}

func (*AsyncResponseContent_StopTaskResponseContent) isAsyncResponseContent_Body() {}

func (*AsyncResponseContent_DeployImageResponseContent) isAsyncResponseContent_Body() {}

// TODO: describe possible errors
type PingTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *PingTransactionRequest) Reset() {
	*x = PingTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTransactionRequest) ProtoMessage() {}

func (x *PingTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTransactionRequest.ProtoReflect.Descriptor instead.
func (*PingTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{3}
}

func (x *PingTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type PingTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status TransactionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pb.TransactionStatus" json:"status,omitempty"`
}

func (x *PingTransactionResponse) Reset() {
	*x = PingTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTransactionResponse) ProtoMessage() {}

func (x *PingTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTransactionResponse.ProtoReflect.Descriptor instead.
func (*PingTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{4}
}

func (x *PingTransactionResponse) GetStatus() TransactionStatus {
	if x != nil {
		return x.Status
	}
	return TransactionStatus_UNKNOWN
}

type AllocateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FactoryId    string        `protobuf:"bytes,2,opt,name=factory_id,json=factoryId,proto3" json:"factory_id,omitempty"`
	HardwareData *HardwareData `protobuf:"bytes,3,opt,name=hardware_data,json=hardwareData,proto3" json:"hardware_data,omitempty"`
}

func (x *AllocateInstanceRequest) Reset() {
	*x = AllocateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateInstanceRequest) ProtoMessage() {}

func (x *AllocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*AllocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{5}
}

func (x *AllocateInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AllocateInstanceRequest) GetFactoryId() string {
	if x != nil {
		return x.FactoryId
	}
	return ""
}

func (x *AllocateInstanceRequest) GetHardwareData() *HardwareData {
	if x != nil {
		return x.HardwareData
	}
	return nil
}

type AllocateInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *AllocateInstanceResponseContent) Reset() {
	*x = AllocateInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllocateInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllocateInstanceResponseContent) ProtoMessage() {}

func (x *AllocateInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllocateInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*AllocateInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{6}
}

func (x *AllocateInstanceResponseContent) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type DeallocateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *DeallocateInstanceRequest) Reset() {
	*x = DeallocateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeallocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeallocateInstanceRequest) ProtoMessage() {}

func (x *DeallocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeallocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*DeallocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{7}
}

func (x *DeallocateInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeallocateInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type DeallocateInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeallocateInstanceResponseContent) Reset() {
	*x = DeallocateInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeallocateInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeallocateInstanceResponseContent) ProtoMessage() {}

func (x *DeallocateInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeallocateInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*DeallocateInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{8}
}

// make API call to start allocated instance associated with user account
type StartInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *StartInstanceRequest) Reset() {
	*x = StartInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartInstanceRequest) ProtoMessage() {}

func (x *StartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartInstanceRequest.ProtoReflect.Descriptor instead.
func (*StartInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{9}
}

func (x *StartInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StartInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StartInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartInstanceResponseContent) Reset() {
	*x = StartInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartInstanceResponseContent) ProtoMessage() {}

func (x *StartInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*StartInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{10}
}

type StopInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *StopInstanceRequest) Reset() {
	*x = StopInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInstanceRequest) ProtoMessage() {}

func (x *StopInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopInstanceRequest.ProtoReflect.Descriptor instead.
func (*StopInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{11}
}

func (x *StopInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StopInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StopInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopInstanceResponseContent) Reset() {
	*x = StopInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopInstanceResponseContent) ProtoMessage() {}

func (x *StopInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*StopInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{12}
}

// make API call to start task definition associated with user account
type StartTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FactoryId    string        `protobuf:"bytes,2,opt,name=factory_id,json=factoryId,proto3" json:"factory_id,omitempty"`
	HardwareData *HardwareData `protobuf:"bytes,3,opt,name=hardware_data,json=hardwareData,proto3" json:"hardware_data,omitempty"`
}

func (x *StartTaskRequest) Reset() {
	*x = StartTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskRequest) ProtoMessage() {}

func (x *StartTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskRequest.ProtoReflect.Descriptor instead.
func (*StartTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{13}
}

func (x *StartTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StartTaskRequest) GetFactoryId() string {
	if x != nil {
		return x.FactoryId
	}
	return ""
}

func (x *StartTaskRequest) GetHardwareData() *HardwareData {
	if x != nil {
		return x.HardwareData
	}
	return nil
}

type StartTaskResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *StartTaskResponseContent) Reset() {
	*x = StartTaskResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartTaskResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskResponseContent) ProtoMessage() {}

func (x *StartTaskResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskResponseContent.ProtoReflect.Descriptor instead.
func (*StartTaskResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{14}
}

func (x *StartTaskResponseContent) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StopTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *StopTaskRequest) Reset() {
	*x = StopTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskRequest) ProtoMessage() {}

func (x *StopTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskRequest.ProtoReflect.Descriptor instead.
func (*StopTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{15}
}

func (x *StopTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *StopTaskRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type StopTaskResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopTaskResponseContent) Reset() {
	*x = StopTaskResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopTaskResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopTaskResponseContent) ProtoMessage() {}

func (x *StopTaskResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopTaskResponseContent.ProtoReflect.Descriptor instead.
func (*StopTaskResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{16}
}

type DeployImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string       `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId  string       `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	DockerImage *DockerImage `protobuf:"bytes,3,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
}

func (x *DeployImageRequest) Reset() {
	*x = DeployImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployImageRequest) ProtoMessage() {}

func (x *DeployImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployImageRequest.ProtoReflect.Descriptor instead.
func (*DeployImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{17}
}

func (x *DeployImageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeployImageRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DeployImageRequest) GetDockerImage() *DockerImage {
	if x != nil {
		return x.DockerImage
	}
	return nil
}

type DeployImageResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeployImageResponseContent) Reset() {
	*x = DeployImageResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployImageResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployImageResponseContent) ProtoMessage() {}

func (x *DeployImageResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployImageResponseContent.ProtoReflect.Descriptor instead.
func (*DeployImageResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{18}
}

var File_api_proto_cloud_manager_proto protoreflect.FileDescriptor

var file_api_proto_cloud_manager_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x61, 0x72,
	0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xcd, 0x04, 0x0a, 0x11, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5f, 0x0a, 0x1b, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x50, 0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x73, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x11, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x6f,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x14,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79,
	0x22, 0x97, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4e, 0x0a, 0x16, 0x61, 0x73,
	0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xff, 0x05, 0x0a, 0x14, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x72, 0x0a, 0x22, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x78, 0x0a, 0x24, 0x64, 0x65, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x21,
	0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x69, 0x0a, 0x1f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1c,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x66, 0x0a, 0x1e,
	0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x5d, 0x0a, 0x1b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x18, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a, 0x1a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x17, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x63, 0x0a, 0x1d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x3f, 0x0a, 0x16,
	0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x48, 0x0a,
	0x17, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0d, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x42, 0x0a, 0x1f, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x55, 0x0a, 0x19, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x23, 0x0a,
	0x21, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64,
	0x77, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x82, 0x01,
	0x0a, 0x12, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x32, 0x98, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x3a, 0x0a, 0x07, 0x44, 0x6f, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a,
	0x0f, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x21, 0x5a, 0x1f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x63, 0x2d, 0x6c, 0x61, 0x62,
	0x2f, 0x73, 0x6b, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_cloud_manager_proto_rawDescOnce sync.Once
	file_api_proto_cloud_manager_proto_rawDescData = file_api_proto_cloud_manager_proto_rawDesc
)

func file_api_proto_cloud_manager_proto_rawDescGZIP() []byte {
	file_api_proto_cloud_manager_proto_rawDescOnce.Do(func() {
		file_api_proto_cloud_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_cloud_manager_proto_rawDescData)
	})
	return file_api_proto_cloud_manager_proto_rawDescData
}

var file_api_proto_cloud_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_proto_cloud_manager_proto_goTypes = []interface{}{
	(*AsyncCloudRequest)(nil),                 // 0: pb.AsyncCloudRequest
	(*AsyncCloudResponse)(nil),                // 1: pb.AsyncCloudResponse
	(*AsyncResponseContent)(nil),              // 2: pb.AsyncResponseContent
	(*PingTransactionRequest)(nil),            // 3: pb.PingTransactionRequest
	(*PingTransactionResponse)(nil),           // 4: pb.PingTransactionResponse
	(*AllocateInstanceRequest)(nil),           // 5: pb.AllocateInstanceRequest
	(*AllocateInstanceResponseContent)(nil),   // 6: pb.AllocateInstanceResponseContent
	(*DeallocateInstanceRequest)(nil),         // 7: pb.DeallocateInstanceRequest
	(*DeallocateInstanceResponseContent)(nil), // 8: pb.DeallocateInstanceResponseContent
	(*StartInstanceRequest)(nil),              // 9: pb.StartInstanceRequest
	(*StartInstanceResponseContent)(nil),      // 10: pb.StartInstanceResponseContent
	(*StopInstanceRequest)(nil),               // 11: pb.StopInstanceRequest
	(*StopInstanceResponseContent)(nil),       // 12: pb.StopInstanceResponseContent
	(*StartTaskRequest)(nil),                  // 13: pb.StartTaskRequest
	(*StartTaskResponseContent)(nil),          // 14: pb.StartTaskResponseContent
	(*StopTaskRequest)(nil),                   // 15: pb.StopTaskRequest
	(*StopTaskResponseContent)(nil),           // 16: pb.StopTaskResponseContent
	(*DeployImageRequest)(nil),                // 17: pb.DeployImageRequest
	(*DeployImageResponseContent)(nil),        // 18: pb.DeployImageResponseContent
	(*Transaction)(nil),                       // 19: pb.Transaction
	(TransactionStatus)(0),                    // 20: pb.TransactionStatus
	(*HardwareData)(nil),                      // 21: pb.HardwareData
	(*DockerImage)(nil),                       // 22: pb.DockerImage
}
var file_api_proto_cloud_manager_proto_depIdxs = []int32{
	5,  // 0: pb.AsyncCloudRequest.allocate_instance_request:type_name -> pb.AllocateInstanceRequest
	7,  // 1: pb.AsyncCloudRequest.deallocate_instance_request:type_name -> pb.DeallocateInstanceRequest
	9,  // 2: pb.AsyncCloudRequest.start_instance_request:type_name -> pb.StartInstanceRequest
	11, // 3: pb.AsyncCloudRequest.stop_instance_request:type_name -> pb.StopInstanceRequest
	13, // 4: pb.AsyncCloudRequest.start_task_request:type_name -> pb.StartTaskRequest
	15, // 5: pb.AsyncCloudRequest.stop_task_request:type_name -> pb.StopTaskRequest
	17, // 6: pb.AsyncCloudRequest.deploy_image_request:type_name -> pb.DeployImageRequest
	19, // 7: pb.AsyncCloudResponse.transaction:type_name -> pb.Transaction
	2,  // 8: pb.AsyncCloudResponse.async_response_content:type_name -> pb.AsyncResponseContent
	6,  // 9: pb.AsyncResponseContent.allocate_instance_response_content:type_name -> pb.AllocateInstanceResponseContent
	8,  // 10: pb.AsyncResponseContent.deallocate_instance_response_content:type_name -> pb.DeallocateInstanceResponseContent
	10, // 11: pb.AsyncResponseContent.start_instance_response_content:type_name -> pb.StartInstanceResponseContent
	12, // 12: pb.AsyncResponseContent.stop_instance_response_content:type_name -> pb.StopInstanceResponseContent
	14, // 13: pb.AsyncResponseContent.start_task_response_content:type_name -> pb.StartTaskResponseContent
	16, // 14: pb.AsyncResponseContent.stop_task_response_content:type_name -> pb.StopTaskResponseContent
	18, // 15: pb.AsyncResponseContent.deploy_image_response_content:type_name -> pb.DeployImageResponseContent
	20, // 16: pb.PingTransactionResponse.status:type_name -> pb.TransactionStatus
	21, // 17: pb.AllocateInstanceRequest.hardware_data:type_name -> pb.HardwareData
	21, // 18: pb.StartTaskRequest.hardware_data:type_name -> pb.HardwareData
	22, // 19: pb.DeployImageRequest.docker_image:type_name -> pb.DockerImage
	0,  // 20: pb.CloudManager.DoAsync:input_type -> pb.AsyncCloudRequest
	3,  // 21: pb.CloudManager.PingTransaction:input_type -> pb.PingTransactionRequest
	1,  // 22: pb.CloudManager.DoAsync:output_type -> pb.AsyncCloudResponse
	4,  // 23: pb.CloudManager.PingTransaction:output_type -> pb.PingTransactionResponse
	22, // [22:24] is the sub-list for method output_type
	20, // [20:22] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_api_proto_cloud_manager_proto_init() }
func file_api_proto_cloud_manager_proto_init() {
	if File_api_proto_cloud_manager_proto != nil {
		return
	}
	file_api_proto_cloud_entity_proto_init()
	file_api_proto_hardware_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_cloud_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncCloudRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncCloudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AsyncResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllocateInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeallocateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeallocateInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartTaskResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopTaskResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployImageResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_cloud_manager_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AsyncCloudRequest_AllocateInstanceRequest)(nil),
		(*AsyncCloudRequest_DeallocateInstanceRequest)(nil),
		(*AsyncCloudRequest_StartInstanceRequest)(nil),
		(*AsyncCloudRequest_StopInstanceRequest)(nil),
		(*AsyncCloudRequest_StartTaskRequest)(nil),
		(*AsyncCloudRequest_StopTaskRequest)(nil),
		(*AsyncCloudRequest_DeployImageRequest)(nil),
	}
	file_api_proto_cloud_manager_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*AsyncResponseContent_AllocateInstanceResponseContent)(nil),
		(*AsyncResponseContent_DeallocateInstanceResponseContent)(nil),
		(*AsyncResponseContent_StartInstanceResponseContent)(nil),
		(*AsyncResponseContent_StopInstanceResponseContent)(nil),
		(*AsyncResponseContent_StartTaskResponseContent)(nil),
		(*AsyncResponseContent_StopTaskResponseContent)(nil),
		(*AsyncResponseContent_DeployImageResponseContent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_cloud_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_cloud_manager_proto_goTypes,
		DependencyIndexes: file_api_proto_cloud_manager_proto_depIdxs,
		MessageInfos:      file_api_proto_cloud_manager_proto_msgTypes,
	}.Build()
	File_api_proto_cloud_manager_proto = out.File
	file_api_proto_cloud_manager_proto_rawDesc = nil
	file_api_proto_cloud_manager_proto_goTypes = nil
	file_api_proto_cloud_manager_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CloudManagerClient is the client API for CloudManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CloudManagerClient interface {
	DoAsync(ctx context.Context, in *AsyncCloudRequest, opts ...grpc.CallOption) (*AsyncCloudResponse, error)
	PingTransaction(ctx context.Context, in *PingTransactionRequest, opts ...grpc.CallOption) (*PingTransactionResponse, error)
}

type cloudManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewCloudManagerClient(cc grpc.ClientConnInterface) CloudManagerClient {
	return &cloudManagerClient{cc}
}

func (c *cloudManagerClient) DoAsync(ctx context.Context, in *AsyncCloudRequest, opts ...grpc.CallOption) (*AsyncCloudResponse, error) {
	out := new(AsyncCloudResponse)
	err := c.cc.Invoke(ctx, "/pb.CloudManager/DoAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cloudManagerClient) PingTransaction(ctx context.Context, in *PingTransactionRequest, opts ...grpc.CallOption) (*PingTransactionResponse, error) {
	out := new(PingTransactionResponse)
	err := c.cc.Invoke(ctx, "/pb.CloudManager/PingTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudManagerServer is the server API for CloudManager service.
type CloudManagerServer interface {
	DoAsync(context.Context, *AsyncCloudRequest) (*AsyncCloudResponse, error)
	PingTransaction(context.Context, *PingTransactionRequest) (*PingTransactionResponse, error)
}

// UnimplementedCloudManagerServer can be embedded to have forward compatible implementations.
type UnimplementedCloudManagerServer struct {
}

func (*UnimplementedCloudManagerServer) DoAsync(context.Context, *AsyncCloudRequest) (*AsyncCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoAsync not implemented")
}
func (*UnimplementedCloudManagerServer) PingTransaction(context.Context, *PingTransactionRequest) (*PingTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingTransaction not implemented")
}

func RegisterCloudManagerServer(s *grpc.Server, srv CloudManagerServer) {
	s.RegisterService(&_CloudManager_serviceDesc, srv)
}

func _CloudManager_DoAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AsyncCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudManagerServer).DoAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CloudManager/DoAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudManagerServer).DoAsync(ctx, req.(*AsyncCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CloudManager_PingTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudManagerServer).PingTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.CloudManager/PingTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudManagerServer).PingTransaction(ctx, req.(*PingTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CloudManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.CloudManager",
	HandlerType: (*CloudManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoAsync",
			Handler:    _CloudManager_DoAsync_Handler,
		},
		{
			MethodName: "PingTransaction",
			Handler:    _CloudManager_PingTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/cloud_manager.proto",
}
