// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: api/proto/cloud_manager.proto

// build *.pb.go from project root
// protoc -I. --go_out=plugins=grpc,paths=source_relative:. api/proto/cloud_manager/*.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TODO: describe possible errors
type TAsyncCloudRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*TAsyncCloudRequest_AllocateInstanceRequest
	//	*TAsyncCloudRequest_DeallocateInstanceRequest
	//	*TAsyncCloudRequest_StartInstanceRequest
	//	*TAsyncCloudRequest_StopInstanceRequest
	//	*TAsyncCloudRequest_StartTaskRequest
	//	*TAsyncCloudRequest_StopTaskRequest
	//	*TAsyncCloudRequest_DeployImageRequest
	Body isTAsyncCloudRequest_Body `protobuf_oneof:"Body"`
}

func (x *TAsyncCloudRequest) Reset() {
	*x = TAsyncCloudRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAsyncCloudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAsyncCloudRequest) ProtoMessage() {}

func (x *TAsyncCloudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAsyncCloudRequest.ProtoReflect.Descriptor instead.
func (*TAsyncCloudRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{0}
}

func (m *TAsyncCloudRequest) GetBody() isTAsyncCloudRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *TAsyncCloudRequest) GetAllocateInstanceRequest() *TAllocateInstanceRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_AllocateInstanceRequest); ok {
		return x.AllocateInstanceRequest
	}
	return nil
}

func (x *TAsyncCloudRequest) GetDeallocateInstanceRequest() *TDeallocateInstanceRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_DeallocateInstanceRequest); ok {
		return x.DeallocateInstanceRequest
	}
	return nil
}

func (x *TAsyncCloudRequest) GetStartInstanceRequest() *TStartInstanceRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_StartInstanceRequest); ok {
		return x.StartInstanceRequest
	}
	return nil
}

func (x *TAsyncCloudRequest) GetStopInstanceRequest() *TStopInstanceRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_StopInstanceRequest); ok {
		return x.StopInstanceRequest
	}
	return nil
}

func (x *TAsyncCloudRequest) GetStartTaskRequest() *TStartTaskRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_StartTaskRequest); ok {
		return x.StartTaskRequest
	}
	return nil
}

func (x *TAsyncCloudRequest) GetStopTaskRequest() *TStopTaskRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_StopTaskRequest); ok {
		return x.StopTaskRequest
	}
	return nil
}

func (x *TAsyncCloudRequest) GetDeployImageRequest() *TDeployImageRequest {
	if x, ok := x.GetBody().(*TAsyncCloudRequest_DeployImageRequest); ok {
		return x.DeployImageRequest
	}
	return nil
}

type isTAsyncCloudRequest_Body interface {
	isTAsyncCloudRequest_Body()
}

type TAsyncCloudRequest_AllocateInstanceRequest struct {
	AllocateInstanceRequest *TAllocateInstanceRequest `protobuf:"bytes,1,opt,name=allocate_instance_request,json=allocateInstanceRequest,proto3,oneof"`
}

type TAsyncCloudRequest_DeallocateInstanceRequest struct {
	DeallocateInstanceRequest *TDeallocateInstanceRequest `protobuf:"bytes,2,opt,name=deallocate_instance_request,json=deallocateInstanceRequest,proto3,oneof"`
}

type TAsyncCloudRequest_StartInstanceRequest struct {
	StartInstanceRequest *TStartInstanceRequest `protobuf:"bytes,3,opt,name=start_instance_request,json=startInstanceRequest,proto3,oneof"`
}

type TAsyncCloudRequest_StopInstanceRequest struct {
	StopInstanceRequest *TStopInstanceRequest `protobuf:"bytes,4,opt,name=stop_instance_request,json=stopInstanceRequest,proto3,oneof"`
}

type TAsyncCloudRequest_StartTaskRequest struct {
	StartTaskRequest *TStartTaskRequest `protobuf:"bytes,5,opt,name=start_task_request,json=startTaskRequest,proto3,oneof"`
}

type TAsyncCloudRequest_StopTaskRequest struct {
	StopTaskRequest *TStopTaskRequest `protobuf:"bytes,6,opt,name=stop_task_request,json=stopTaskRequest,proto3,oneof"`
}

type TAsyncCloudRequest_DeployImageRequest struct {
	DeployImageRequest *TDeployImageRequest `protobuf:"bytes,7,opt,name=deploy_image_request,json=deployImageRequest,proto3,oneof"`
}

func (*TAsyncCloudRequest_AllocateInstanceRequest) isTAsyncCloudRequest_Body() {}

func (*TAsyncCloudRequest_DeallocateInstanceRequest) isTAsyncCloudRequest_Body() {}

func (*TAsyncCloudRequest_StartInstanceRequest) isTAsyncCloudRequest_Body() {}

func (*TAsyncCloudRequest_StopInstanceRequest) isTAsyncCloudRequest_Body() {}

func (*TAsyncCloudRequest_StartTaskRequest) isTAsyncCloudRequest_Body() {}

func (*TAsyncCloudRequest_StopTaskRequest) isTAsyncCloudRequest_Body() {}

func (*TAsyncCloudRequest_DeployImageRequest) isTAsyncCloudRequest_Body() {}

type TAsyncCloudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transaction          *TTransaction          `protobuf:"bytes,1,opt,name=transaction,proto3" json:"transaction,omitempty"`
	AsyncResponseContent *TAsyncResponseContent `protobuf:"bytes,2,opt,name=async_response_content,json=asyncResponseContent,proto3" json:"async_response_content,omitempty"`
}

func (x *TAsyncCloudResponse) Reset() {
	*x = TAsyncCloudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAsyncCloudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAsyncCloudResponse) ProtoMessage() {}

func (x *TAsyncCloudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAsyncCloudResponse.ProtoReflect.Descriptor instead.
func (*TAsyncCloudResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{1}
}

func (x *TAsyncCloudResponse) GetTransaction() *TTransaction {
	if x != nil {
		return x.Transaction
	}
	return nil
}

func (x *TAsyncCloudResponse) GetAsyncResponseContent() *TAsyncResponseContent {
	if x != nil {
		return x.AsyncResponseContent
	}
	return nil
}

type TAsyncResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*TAsyncResponseContent_AllocateInstanceResponseContent
	//	*TAsyncResponseContent_DeallocateInstanceResponseContent
	//	*TAsyncResponseContent_StartInstanceResponseContent
	//	*TAsyncResponseContent_StopInstanceResponseContent
	//	*TAsyncResponseContent_StartTaskResponseContent
	//	*TAsyncResponseContent_StopTaskResponseContent
	//	*TAsyncResponseContent_DeployImageResponseContent
	Body isTAsyncResponseContent_Body `protobuf_oneof:"Body"`
}

func (x *TAsyncResponseContent) Reset() {
	*x = TAsyncResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAsyncResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAsyncResponseContent) ProtoMessage() {}

func (x *TAsyncResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAsyncResponseContent.ProtoReflect.Descriptor instead.
func (*TAsyncResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{2}
}

func (m *TAsyncResponseContent) GetBody() isTAsyncResponseContent_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *TAsyncResponseContent) GetAllocateInstanceResponseContent() *TAllocateInstanceResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_AllocateInstanceResponseContent); ok {
		return x.AllocateInstanceResponseContent
	}
	return nil
}

func (x *TAsyncResponseContent) GetDeallocateInstanceResponseContent() *TDeallocateInstanceResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_DeallocateInstanceResponseContent); ok {
		return x.DeallocateInstanceResponseContent
	}
	return nil
}

func (x *TAsyncResponseContent) GetStartInstanceResponseContent() *TStartInstanceResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_StartInstanceResponseContent); ok {
		return x.StartInstanceResponseContent
	}
	return nil
}

func (x *TAsyncResponseContent) GetStopInstanceResponseContent() *TStopInstanceResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_StopInstanceResponseContent); ok {
		return x.StopInstanceResponseContent
	}
	return nil
}

func (x *TAsyncResponseContent) GetStartTaskResponseContent() *TStartTaskResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_StartTaskResponseContent); ok {
		return x.StartTaskResponseContent
	}
	return nil
}

func (x *TAsyncResponseContent) GetStopTaskResponseContent() *TStopTaskResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_StopTaskResponseContent); ok {
		return x.StopTaskResponseContent
	}
	return nil
}

func (x *TAsyncResponseContent) GetDeployImageResponseContent() *TDeployImageResponseContent {
	if x, ok := x.GetBody().(*TAsyncResponseContent_DeployImageResponseContent); ok {
		return x.DeployImageResponseContent
	}
	return nil
}

type isTAsyncResponseContent_Body interface {
	isTAsyncResponseContent_Body()
}

type TAsyncResponseContent_AllocateInstanceResponseContent struct {
	AllocateInstanceResponseContent *TAllocateInstanceResponseContent `protobuf:"bytes,1,opt,name=allocate_instance_response_content,json=allocateInstanceResponseContent,proto3,oneof"`
}

type TAsyncResponseContent_DeallocateInstanceResponseContent struct {
	DeallocateInstanceResponseContent *TDeallocateInstanceResponseContent `protobuf:"bytes,2,opt,name=deallocate_instance_response_content,json=deallocateInstanceResponseContent,proto3,oneof"`
}

type TAsyncResponseContent_StartInstanceResponseContent struct {
	StartInstanceResponseContent *TStartInstanceResponseContent `protobuf:"bytes,3,opt,name=start_instance_response_content,json=startInstanceResponseContent,proto3,oneof"`
}

type TAsyncResponseContent_StopInstanceResponseContent struct {
	StopInstanceResponseContent *TStopInstanceResponseContent `protobuf:"bytes,4,opt,name=stop_instance_response_content,json=stopInstanceResponseContent,proto3,oneof"`
}

type TAsyncResponseContent_StartTaskResponseContent struct {
	StartTaskResponseContent *TStartTaskResponseContent `protobuf:"bytes,5,opt,name=start_task_response_content,json=startTaskResponseContent,proto3,oneof"`
}

type TAsyncResponseContent_StopTaskResponseContent struct {
	StopTaskResponseContent *TStopTaskResponseContent `protobuf:"bytes,6,opt,name=stop_task_response_content,json=stopTaskResponseContent,proto3,oneof"`
}

type TAsyncResponseContent_DeployImageResponseContent struct {
	DeployImageResponseContent *TDeployImageResponseContent `protobuf:"bytes,7,opt,name=deploy_image_response_content,json=deployImageResponseContent,proto3,oneof"`
}

func (*TAsyncResponseContent_AllocateInstanceResponseContent) isTAsyncResponseContent_Body() {}

func (*TAsyncResponseContent_DeallocateInstanceResponseContent) isTAsyncResponseContent_Body() {}

func (*TAsyncResponseContent_StartInstanceResponseContent) isTAsyncResponseContent_Body() {}

func (*TAsyncResponseContent_StopInstanceResponseContent) isTAsyncResponseContent_Body() {}

func (*TAsyncResponseContent_StartTaskResponseContent) isTAsyncResponseContent_Body() {}

func (*TAsyncResponseContent_StopTaskResponseContent) isTAsyncResponseContent_Body() {}

func (*TAsyncResponseContent_DeployImageResponseContent) isTAsyncResponseContent_Body() {}

// TODO: describe possible errors
type TPingTransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
}

func (x *TPingTransactionRequest) Reset() {
	*x = TPingTransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPingTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPingTransactionRequest) ProtoMessage() {}

func (x *TPingTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPingTransactionRequest.ProtoReflect.Descriptor instead.
func (*TPingTransactionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{3}
}

func (x *TPingTransactionRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

type TPingTransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status ETransactionStatus `protobuf:"varint,1,opt,name=status,proto3,enum=pb.ETransactionStatus" json:"status,omitempty"`
}

func (x *TPingTransactionResponse) Reset() {
	*x = TPingTransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPingTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPingTransactionResponse) ProtoMessage() {}

func (x *TPingTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPingTransactionResponse.ProtoReflect.Descriptor instead.
func (*TPingTransactionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{4}
}

func (x *TPingTransactionResponse) GetStatus() ETransactionStatus {
	if x != nil {
		return x.Status
	}
	return ETransactionStatus_UNKNOWN
}

type TAllocateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FactoryId    string         `protobuf:"bytes,2,opt,name=factory_id,json=factoryId,proto3" json:"factory_id,omitempty"`
	HardwareData *THardwareData `protobuf:"bytes,3,opt,name=hardware_data,json=hardwareData,proto3" json:"hardware_data,omitempty"`
}

func (x *TAllocateInstanceRequest) Reset() {
	*x = TAllocateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAllocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAllocateInstanceRequest) ProtoMessage() {}

func (x *TAllocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAllocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*TAllocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{5}
}

func (x *TAllocateInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TAllocateInstanceRequest) GetFactoryId() string {
	if x != nil {
		return x.FactoryId
	}
	return ""
}

func (x *TAllocateInstanceRequest) GetHardwareData() *THardwareData {
	if x != nil {
		return x.HardwareData
	}
	return nil
}

type TAllocateInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TAllocateInstanceResponseContent) Reset() {
	*x = TAllocateInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAllocateInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAllocateInstanceResponseContent) ProtoMessage() {}

func (x *TAllocateInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAllocateInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*TAllocateInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{6}
}

func (x *TAllocateInstanceResponseContent) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TDeallocateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TDeallocateInstanceRequest) Reset() {
	*x = TDeallocateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeallocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeallocateInstanceRequest) ProtoMessage() {}

func (x *TDeallocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeallocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*TDeallocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{7}
}

func (x *TDeallocateInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TDeallocateInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TDeallocateInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TDeallocateInstanceResponseContent) Reset() {
	*x = TDeallocateInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeallocateInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeallocateInstanceResponseContent) ProtoMessage() {}

func (x *TDeallocateInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeallocateInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*TDeallocateInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{8}
}

// make API call to start allocated instance associated with user account
type TStartInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TStartInstanceRequest) Reset() {
	*x = TStartInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartInstanceRequest) ProtoMessage() {}

func (x *TStartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartInstanceRequest.ProtoReflect.Descriptor instead.
func (*TStartInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{9}
}

func (x *TStartInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TStartInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TStartInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TStartInstanceResponseContent) Reset() {
	*x = TStartInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartInstanceResponseContent) ProtoMessage() {}

func (x *TStartInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*TStartInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{10}
}

type TStopInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TStopInstanceRequest) Reset() {
	*x = TStopInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopInstanceRequest) ProtoMessage() {}

func (x *TStopInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopInstanceRequest.ProtoReflect.Descriptor instead.
func (*TStopInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{11}
}

func (x *TStopInstanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TStopInstanceRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TStopInstanceResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TStopInstanceResponseContent) Reset() {
	*x = TStopInstanceResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopInstanceResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopInstanceResponseContent) ProtoMessage() {}

func (x *TStopInstanceResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopInstanceResponseContent.ProtoReflect.Descriptor instead.
func (*TStopInstanceResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{12}
}

// make API call to start task definition associated with user account
type TStartTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string         `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FactoryId    string         `protobuf:"bytes,2,opt,name=factory_id,json=factoryId,proto3" json:"factory_id,omitempty"`
	HardwareData *THardwareData `protobuf:"bytes,3,opt,name=hardware_data,json=hardwareData,proto3" json:"hardware_data,omitempty"`
}

func (x *TStartTaskRequest) Reset() {
	*x = TStartTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartTaskRequest) ProtoMessage() {}

func (x *TStartTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartTaskRequest.ProtoReflect.Descriptor instead.
func (*TStartTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{13}
}

func (x *TStartTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TStartTaskRequest) GetFactoryId() string {
	if x != nil {
		return x.FactoryId
	}
	return ""
}

func (x *TStartTaskRequest) GetHardwareData() *THardwareData {
	if x != nil {
		return x.HardwareData
	}
	return nil
}

type TStartTaskResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TStartTaskResponseContent) Reset() {
	*x = TStartTaskResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartTaskResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartTaskResponseContent) ProtoMessage() {}

func (x *TStartTaskResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartTaskResponseContent.ProtoReflect.Descriptor instead.
func (*TStartTaskResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{14}
}

func (x *TStartTaskResponseContent) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TStopTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
}

func (x *TStopTaskRequest) Reset() {
	*x = TStopTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopTaskRequest) ProtoMessage() {}

func (x *TStopTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopTaskRequest.ProtoReflect.Descriptor instead.
func (*TStopTaskRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{15}
}

func (x *TStopTaskRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TStopTaskRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type TStopTaskResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TStopTaskResponseContent) Reset() {
	*x = TStopTaskResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopTaskResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopTaskResponseContent) ProtoMessage() {}

func (x *TStopTaskResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopTaskResponseContent.ProtoReflect.Descriptor instead.
func (*TStopTaskResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{16}
}

type TDeployImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	InstanceId  string        `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	DockerImage *TDockerImage `protobuf:"bytes,3,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
}

func (x *TDeployImageRequest) Reset() {
	*x = TDeployImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeployImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeployImageRequest) ProtoMessage() {}

func (x *TDeployImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeployImageRequest.ProtoReflect.Descriptor instead.
func (*TDeployImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{17}
}

func (x *TDeployImageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TDeployImageRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *TDeployImageRequest) GetDockerImage() *TDockerImage {
	if x != nil {
		return x.DockerImage
	}
	return nil
}

type TDeployImageResponseContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TDeployImageResponseContent) Reset() {
	*x = TDeployImageResponseContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_manager_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeployImageResponseContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeployImageResponseContent) ProtoMessage() {}

func (x *TDeployImageResponseContent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_manager_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeployImageResponseContent.ProtoReflect.Descriptor instead.
func (*TDeployImageResponseContent) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_manager_proto_rawDescGZIP(), []int{18}
}

var File_api_proto_cloud_manager_proto protoreflect.FileDescriptor

var file_api_proto_cloud_manager_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x02, 0x70, 0x62, 0x1a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x04, 0x0a, 0x12, 0x54, 0x41,
	0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5a, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x1b,
	0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x19, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51,
	0x0a, 0x16, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4e, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x74,
	0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x45, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x6f,
	0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x14,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64,
	0x79, 0x22, 0x9a, 0x01, 0x0a, 0x13, 0x54, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x0b, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a,
	0x16, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x14, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x87,
	0x06, 0x0a, 0x15, 0x54, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x73, 0x0a, 0x22, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1f, 0x61, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x79, 0x0a,
	0x24, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x21, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x6a, 0x0a, 0x1f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x1c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x67, 0x0a, 0x1e, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x1b, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x5e, 0x0a,
	0x1b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x18, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x5b, 0x0a,
	0x1a, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x17, 0x73, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x64, 0x0a, 0x1d, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x40, 0x0a, 0x17, 0x54, 0x50, 0x69, 0x6e,
	0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x18, 0x54, 0x50,
	0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x01, 0x0a, 0x18, 0x54, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x68,
	0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x43, 0x0a, 0x20, 0x54, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x54, 0x44, 0x65, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x24, 0x0a, 0x22, 0x54, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x51, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x54, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x50, 0x0a, 0x14, 0x54, 0x53,
	0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c,
	0x54, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x83, 0x01, 0x0a,
	0x11, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x3c, 0x0a, 0x19, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x61, 0x73, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x4c, 0x0a, 0x10, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x1a,
	0x0a, 0x18, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x54,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x0c,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x54, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x32, 0x9d, 0x01, 0x0a, 0x0d, 0x54, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x3c, 0x0a, 0x07, 0x44, 0x6f, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x12, 0x16, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x41, 0x73, 0x79, 0x6e, 0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x41, 0x73, 0x79, 0x6e,
	0x63, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4e, 0x0a, 0x0f, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x50, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x63, 0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x73, 0x6b, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_cloud_manager_proto_rawDescOnce sync.Once
	file_api_proto_cloud_manager_proto_rawDescData = file_api_proto_cloud_manager_proto_rawDesc
)

func file_api_proto_cloud_manager_proto_rawDescGZIP() []byte {
	file_api_proto_cloud_manager_proto_rawDescOnce.Do(func() {
		file_api_proto_cloud_manager_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_cloud_manager_proto_rawDescData)
	})
	return file_api_proto_cloud_manager_proto_rawDescData
}

var file_api_proto_cloud_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_api_proto_cloud_manager_proto_goTypes = []interface{}{
	(*TAsyncCloudRequest)(nil),                 // 0: pb.TAsyncCloudRequest
	(*TAsyncCloudResponse)(nil),                // 1: pb.TAsyncCloudResponse
	(*TAsyncResponseContent)(nil),              // 2: pb.TAsyncResponseContent
	(*TPingTransactionRequest)(nil),            // 3: pb.TPingTransactionRequest
	(*TPingTransactionResponse)(nil),           // 4: pb.TPingTransactionResponse
	(*TAllocateInstanceRequest)(nil),           // 5: pb.TAllocateInstanceRequest
	(*TAllocateInstanceResponseContent)(nil),   // 6: pb.TAllocateInstanceResponseContent
	(*TDeallocateInstanceRequest)(nil),         // 7: pb.TDeallocateInstanceRequest
	(*TDeallocateInstanceResponseContent)(nil), // 8: pb.TDeallocateInstanceResponseContent
	(*TStartInstanceRequest)(nil),              // 9: pb.TStartInstanceRequest
	(*TStartInstanceResponseContent)(nil),      // 10: pb.TStartInstanceResponseContent
	(*TStopInstanceRequest)(nil),               // 11: pb.TStopInstanceRequest
	(*TStopInstanceResponseContent)(nil),       // 12: pb.TStopInstanceResponseContent
	(*TStartTaskRequest)(nil),                  // 13: pb.TStartTaskRequest
	(*TStartTaskResponseContent)(nil),          // 14: pb.TStartTaskResponseContent
	(*TStopTaskRequest)(nil),                   // 15: pb.TStopTaskRequest
	(*TStopTaskResponseContent)(nil),           // 16: pb.TStopTaskResponseContent
	(*TDeployImageRequest)(nil),                // 17: pb.TDeployImageRequest
	(*TDeployImageResponseContent)(nil),        // 18: pb.TDeployImageResponseContent
	(*TTransaction)(nil),                       // 19: pb.TTransaction
	(ETransactionStatus)(0),                    // 20: pb.ETransactionStatus
	(*THardwareData)(nil),                      // 21: pb.THardwareData
	(*TDockerImage)(nil),                       // 22: pb.TDockerImage
}
var file_api_proto_cloud_manager_proto_depIdxs = []int32{
	5,  // 0: pb.TAsyncCloudRequest.allocate_instance_request:type_name -> pb.TAllocateInstanceRequest
	7,  // 1: pb.TAsyncCloudRequest.deallocate_instance_request:type_name -> pb.TDeallocateInstanceRequest
	9,  // 2: pb.TAsyncCloudRequest.start_instance_request:type_name -> pb.TStartInstanceRequest
	11, // 3: pb.TAsyncCloudRequest.stop_instance_request:type_name -> pb.TStopInstanceRequest
	13, // 4: pb.TAsyncCloudRequest.start_task_request:type_name -> pb.TStartTaskRequest
	15, // 5: pb.TAsyncCloudRequest.stop_task_request:type_name -> pb.TStopTaskRequest
	17, // 6: pb.TAsyncCloudRequest.deploy_image_request:type_name -> pb.TDeployImageRequest
	19, // 7: pb.TAsyncCloudResponse.transaction:type_name -> pb.TTransaction
	2,  // 8: pb.TAsyncCloudResponse.async_response_content:type_name -> pb.TAsyncResponseContent
	6,  // 9: pb.TAsyncResponseContent.allocate_instance_response_content:type_name -> pb.TAllocateInstanceResponseContent
	8,  // 10: pb.TAsyncResponseContent.deallocate_instance_response_content:type_name -> pb.TDeallocateInstanceResponseContent
	10, // 11: pb.TAsyncResponseContent.start_instance_response_content:type_name -> pb.TStartInstanceResponseContent
	12, // 12: pb.TAsyncResponseContent.stop_instance_response_content:type_name -> pb.TStopInstanceResponseContent
	14, // 13: pb.TAsyncResponseContent.start_task_response_content:type_name -> pb.TStartTaskResponseContent
	16, // 14: pb.TAsyncResponseContent.stop_task_response_content:type_name -> pb.TStopTaskResponseContent
	18, // 15: pb.TAsyncResponseContent.deploy_image_response_content:type_name -> pb.TDeployImageResponseContent
	20, // 16: pb.TPingTransactionResponse.status:type_name -> pb.ETransactionStatus
	21, // 17: pb.TAllocateInstanceRequest.hardware_data:type_name -> pb.THardwareData
	21, // 18: pb.TStartTaskRequest.hardware_data:type_name -> pb.THardwareData
	22, // 19: pb.TDeployImageRequest.docker_image:type_name -> pb.TDockerImage
	0,  // 20: pb.TCloudManager.DoAsync:input_type -> pb.TAsyncCloudRequest
	3,  // 21: pb.TCloudManager.PingTransaction:input_type -> pb.TPingTransactionRequest
	1,  // 22: pb.TCloudManager.DoAsync:output_type -> pb.TAsyncCloudResponse
	4,  // 23: pb.TCloudManager.PingTransaction:output_type -> pb.TPingTransactionResponse
	22, // [22:24] is the sub-list for method output_type
	20, // [20:22] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_api_proto_cloud_manager_proto_init() }
func file_api_proto_cloud_manager_proto_init() {
	if File_api_proto_cloud_manager_proto != nil {
		return
	}
	file_api_proto_cloud_entity_proto_init()
	file_api_proto_entity_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_cloud_manager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAsyncCloudRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAsyncCloudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAsyncResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPingTransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPingTransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAllocateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAllocateInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeallocateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeallocateInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopInstanceResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartTaskResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopTaskResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeployImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_manager_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeployImageResponseContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_cloud_manager_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TAsyncCloudRequest_AllocateInstanceRequest)(nil),
		(*TAsyncCloudRequest_DeallocateInstanceRequest)(nil),
		(*TAsyncCloudRequest_StartInstanceRequest)(nil),
		(*TAsyncCloudRequest_StopInstanceRequest)(nil),
		(*TAsyncCloudRequest_StartTaskRequest)(nil),
		(*TAsyncCloudRequest_StopTaskRequest)(nil),
		(*TAsyncCloudRequest_DeployImageRequest)(nil),
	}
	file_api_proto_cloud_manager_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*TAsyncResponseContent_AllocateInstanceResponseContent)(nil),
		(*TAsyncResponseContent_DeallocateInstanceResponseContent)(nil),
		(*TAsyncResponseContent_StartInstanceResponseContent)(nil),
		(*TAsyncResponseContent_StopInstanceResponseContent)(nil),
		(*TAsyncResponseContent_StartTaskResponseContent)(nil),
		(*TAsyncResponseContent_StopTaskResponseContent)(nil),
		(*TAsyncResponseContent_DeployImageResponseContent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_cloud_manager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_cloud_manager_proto_goTypes,
		DependencyIndexes: file_api_proto_cloud_manager_proto_depIdxs,
		MessageInfos:      file_api_proto_cloud_manager_proto_msgTypes,
	}.Build()
	File_api_proto_cloud_manager_proto = out.File
	file_api_proto_cloud_manager_proto_rawDesc = nil
	file_api_proto_cloud_manager_proto_goTypes = nil
	file_api_proto_cloud_manager_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TCloudManagerClient is the client API for TCloudManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TCloudManagerClient interface {
	DoAsync(ctx context.Context, in *TAsyncCloudRequest, opts ...grpc.CallOption) (*TAsyncCloudResponse, error)
	PingTransaction(ctx context.Context, in *TPingTransactionRequest, opts ...grpc.CallOption) (*TPingTransactionResponse, error)
}

type tCloudManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewTCloudManagerClient(cc grpc.ClientConnInterface) TCloudManagerClient {
	return &tCloudManagerClient{cc}
}

func (c *tCloudManagerClient) DoAsync(ctx context.Context, in *TAsyncCloudRequest, opts ...grpc.CallOption) (*TAsyncCloudResponse, error) {
	out := new(TAsyncCloudResponse)
	err := c.cc.Invoke(ctx, "/pb.TCloudManager/DoAsync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *tCloudManagerClient) PingTransaction(ctx context.Context, in *TPingTransactionRequest, opts ...grpc.CallOption) (*TPingTransactionResponse, error) {
	out := new(TPingTransactionResponse)
	err := c.cc.Invoke(ctx, "/pb.TCloudManager/PingTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TCloudManagerServer is the server API for TCloudManager service.
type TCloudManagerServer interface {
	DoAsync(context.Context, *TAsyncCloudRequest) (*TAsyncCloudResponse, error)
	PingTransaction(context.Context, *TPingTransactionRequest) (*TPingTransactionResponse, error)
}

// UnimplementedTCloudManagerServer can be embedded to have forward compatible implementations.
type UnimplementedTCloudManagerServer struct {
}

func (*UnimplementedTCloudManagerServer) DoAsync(context.Context, *TAsyncCloudRequest) (*TAsyncCloudResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DoAsync not implemented")
}
func (*UnimplementedTCloudManagerServer) PingTransaction(context.Context, *TPingTransactionRequest) (*TPingTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PingTransaction not implemented")
}

func RegisterTCloudManagerServer(s *grpc.Server, srv TCloudManagerServer) {
	s.RegisterService(&_TCloudManager_serviceDesc, srv)
}

func _TCloudManager_DoAsync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TAsyncCloudRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TCloudManagerServer).DoAsync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TCloudManager/DoAsync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TCloudManagerServer).DoAsync(ctx, req.(*TAsyncCloudRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TCloudManager_PingTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TPingTransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TCloudManagerServer).PingTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.TCloudManager/PingTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TCloudManagerServer).PingTransaction(ctx, req.(*TPingTransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TCloudManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.TCloudManager",
	HandlerType: (*TCloudManagerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DoAsync",
			Handler:    _TCloudManager_DoAsync_Handler,
		},
		{
			MethodName: "PingTransaction",
			Handler:    _TCloudManager_PingTransaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/proto/cloud_manager.proto",
}
