// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0-devel
// 	protoc        v3.11.4
// source: api/proto/cloud/cloud.proto

// build *.pb.go from project root
// protoc -I. --go_out=plugins=grpc,paths=source_relative:. api/proto/cloud/*.proto

package cloud

import (
	context "context"
	common "github.com/dc-lab/sky/api/proto/common"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type TAmazonApiSettings_EScheme int32

const (
	TAmazonApiSettings_NONE  TAmazonApiSettings_EScheme = 0
	TAmazonApiSettings_HTTP  TAmazonApiSettings_EScheme = 1
	TAmazonApiSettings_HTTPS TAmazonApiSettings_EScheme = 2
)

// Enum value maps for TAmazonApiSettings_EScheme.
var (
	TAmazonApiSettings_EScheme_name = map[int32]string{
		0: "NONE",
		1: "HTTP",
		2: "HTTPS",
	}
	TAmazonApiSettings_EScheme_value = map[string]int32{
		"NONE":  0,
		"HTTP":  1,
		"HTTPS": 2,
	}
)

func (x TAmazonApiSettings_EScheme) Enum() *TAmazonApiSettings_EScheme {
	p := new(TAmazonApiSettings_EScheme)
	*p = x
	return p
}

func (x TAmazonApiSettings_EScheme) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TAmazonApiSettings_EScheme) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_cloud_cloud_proto_enumTypes[0].Descriptor()
}

func (TAmazonApiSettings_EScheme) Type() protoreflect.EnumType {
	return &file_api_proto_cloud_cloud_proto_enumTypes[0]
}

func (x TAmazonApiSettings_EScheme) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TAmazonApiSettings_EScheme.Descriptor instead.
func (TAmazonApiSettings_EScheme) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{20, 0}
}

type TCloudRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*TCloudRequest_AllocateInstanceRequest
	//	*TCloudRequest_DeallocateInstanceRequest
	//	*TCloudRequest_ConnectInstanceRequest
	//	*TCloudRequest_DisconnectInstanceRequest
	//	*TCloudRequest_StartInstanceRequest
	//	*TCloudRequest_StopInstanceRequest
	//	*TCloudRequest_DeployImageRequest
	Body isTCloudRequest_Body `protobuf_oneof:"Body"`
}

func (x *TCloudRequest) Reset() {
	*x = TCloudRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCloudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCloudRequest) ProtoMessage() {}

func (x *TCloudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCloudRequest.ProtoReflect.Descriptor instead.
func (*TCloudRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{0}
}

func (m *TCloudRequest) GetBody() isTCloudRequest_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *TCloudRequest) GetAllocateInstanceRequest() *TAllocateInstanceRequest {
	if x, ok := x.GetBody().(*TCloudRequest_AllocateInstanceRequest); ok {
		return x.AllocateInstanceRequest
	}
	return nil
}

func (x *TCloudRequest) GetDeallocateInstanceRequest() *TDeallocateInstanceRequest {
	if x, ok := x.GetBody().(*TCloudRequest_DeallocateInstanceRequest); ok {
		return x.DeallocateInstanceRequest
	}
	return nil
}

func (x *TCloudRequest) GetConnectInstanceRequest() *TConnectInstanceRequest {
	if x, ok := x.GetBody().(*TCloudRequest_ConnectInstanceRequest); ok {
		return x.ConnectInstanceRequest
	}
	return nil
}

func (x *TCloudRequest) GetDisconnectInstanceRequest() *TDisconnectInstanceRequest {
	if x, ok := x.GetBody().(*TCloudRequest_DisconnectInstanceRequest); ok {
		return x.DisconnectInstanceRequest
	}
	return nil
}

func (x *TCloudRequest) GetStartInstanceRequest() *TStartInstanceRequest {
	if x, ok := x.GetBody().(*TCloudRequest_StartInstanceRequest); ok {
		return x.StartInstanceRequest
	}
	return nil
}

func (x *TCloudRequest) GetStopInstanceRequest() *TStopInstanceRequest {
	if x, ok := x.GetBody().(*TCloudRequest_StopInstanceRequest); ok {
		return x.StopInstanceRequest
	}
	return nil
}

func (x *TCloudRequest) GetDeployImageRequest() *TDeployImageRequest {
	if x, ok := x.GetBody().(*TCloudRequest_DeployImageRequest); ok {
		return x.DeployImageRequest
	}
	return nil
}

type isTCloudRequest_Body interface {
	isTCloudRequest_Body()
}

type TCloudRequest_AllocateInstanceRequest struct {
	AllocateInstanceRequest *TAllocateInstanceRequest `protobuf:"bytes,1,opt,name=allocate_instance_request,json=allocateInstanceRequest,proto3,oneof"`
}

type TCloudRequest_DeallocateInstanceRequest struct {
	DeallocateInstanceRequest *TDeallocateInstanceRequest `protobuf:"bytes,2,opt,name=deallocate_instance_request,json=deallocateInstanceRequest,proto3,oneof"`
}

type TCloudRequest_ConnectInstanceRequest struct {
	ConnectInstanceRequest *TConnectInstanceRequest `protobuf:"bytes,3,opt,name=connect_instance_request,json=connectInstanceRequest,proto3,oneof"`
}

type TCloudRequest_DisconnectInstanceRequest struct {
	DisconnectInstanceRequest *TDisconnectInstanceRequest `protobuf:"bytes,4,opt,name=disconnect_instance_request,json=disconnectInstanceRequest,proto3,oneof"`
}

type TCloudRequest_StartInstanceRequest struct {
	StartInstanceRequest *TStartInstanceRequest `protobuf:"bytes,5,opt,name=start_instance_request,json=startInstanceRequest,proto3,oneof"`
}

type TCloudRequest_StopInstanceRequest struct {
	StopInstanceRequest *TStopInstanceRequest `protobuf:"bytes,6,opt,name=stop_instance_request,json=stopInstanceRequest,proto3,oneof"`
}

type TCloudRequest_DeployImageRequest struct {
	DeployImageRequest *TDeployImageRequest `protobuf:"bytes,7,opt,name=deploy_image_request,json=deployImageRequest,proto3,oneof"`
}

func (*TCloudRequest_AllocateInstanceRequest) isTCloudRequest_Body() {}

func (*TCloudRequest_DeallocateInstanceRequest) isTCloudRequest_Body() {}

func (*TCloudRequest_ConnectInstanceRequest) isTCloudRequest_Body() {}

func (*TCloudRequest_DisconnectInstanceRequest) isTCloudRequest_Body() {}

func (*TCloudRequest_StartInstanceRequest) isTCloudRequest_Body() {}

func (*TCloudRequest_StopInstanceRequest) isTCloudRequest_Body() {}

func (*TCloudRequest_DeployImageRequest) isTCloudRequest_Body() {}

type TCloudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*TCloudResponse_AllocateInstanceResponse
	//	*TCloudResponse_DeallocateInstanceResponse
	//	*TCloudResponse_ConnectInstanceResponse
	//	*TCloudResponse_DisconnectInstanceResponse
	//	*TCloudResponse_StartInstanceResponse
	//	*TCloudResponse_StopInstanceResponse
	//	*TCloudResponse_DeployImageResponse
	Body isTCloudResponse_Body `protobuf_oneof:"Body"`
}

func (x *TCloudResponse) Reset() {
	*x = TCloudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TCloudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCloudResponse) ProtoMessage() {}

func (x *TCloudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCloudResponse.ProtoReflect.Descriptor instead.
func (*TCloudResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{1}
}

func (m *TCloudResponse) GetBody() isTCloudResponse_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *TCloudResponse) GetAllocateInstanceResponse() *TAllocateInstanceResponse {
	if x, ok := x.GetBody().(*TCloudResponse_AllocateInstanceResponse); ok {
		return x.AllocateInstanceResponse
	}
	return nil
}

func (x *TCloudResponse) GetDeallocateInstanceResponse() *TDeallocateInstanceResponse {
	if x, ok := x.GetBody().(*TCloudResponse_DeallocateInstanceResponse); ok {
		return x.DeallocateInstanceResponse
	}
	return nil
}

func (x *TCloudResponse) GetConnectInstanceResponse() *TConnectInstanceResponse {
	if x, ok := x.GetBody().(*TCloudResponse_ConnectInstanceResponse); ok {
		return x.ConnectInstanceResponse
	}
	return nil
}

func (x *TCloudResponse) GetDisconnectInstanceResponse() *TDisconnectInstanceResponse {
	if x, ok := x.GetBody().(*TCloudResponse_DisconnectInstanceResponse); ok {
		return x.DisconnectInstanceResponse
	}
	return nil
}

func (x *TCloudResponse) GetStartInstanceResponse() *TStartInstanceResponse {
	if x, ok := x.GetBody().(*TCloudResponse_StartInstanceResponse); ok {
		return x.StartInstanceResponse
	}
	return nil
}

func (x *TCloudResponse) GetStopInstanceResponse() *TStopInstanceResponse {
	if x, ok := x.GetBody().(*TCloudResponse_StopInstanceResponse); ok {
		return x.StopInstanceResponse
	}
	return nil
}

func (x *TCloudResponse) GetDeployImageResponse() *TDeployImageResponse {
	if x, ok := x.GetBody().(*TCloudResponse_DeployImageResponse); ok {
		return x.DeployImageResponse
	}
	return nil
}

type isTCloudResponse_Body interface {
	isTCloudResponse_Body()
}

type TCloudResponse_AllocateInstanceResponse struct {
	AllocateInstanceResponse *TAllocateInstanceResponse `protobuf:"bytes,1,opt,name=allocate_instance_response,json=allocateInstanceResponse,proto3,oneof"`
}

type TCloudResponse_DeallocateInstanceResponse struct {
	DeallocateInstanceResponse *TDeallocateInstanceResponse `protobuf:"bytes,2,opt,name=deallocate_instance_response,json=deallocateInstanceResponse,proto3,oneof"`
}

type TCloudResponse_ConnectInstanceResponse struct {
	ConnectInstanceResponse *TConnectInstanceResponse `protobuf:"bytes,3,opt,name=connect_instance_response,json=connectInstanceResponse,proto3,oneof"`
}

type TCloudResponse_DisconnectInstanceResponse struct {
	DisconnectInstanceResponse *TDisconnectInstanceResponse `protobuf:"bytes,4,opt,name=disconnect_instance_response,json=disconnectInstanceResponse,proto3,oneof"`
}

type TCloudResponse_StartInstanceResponse struct {
	StartInstanceResponse *TStartInstanceResponse `protobuf:"bytes,5,opt,name=start_instance_response,json=startInstanceResponse,proto3,oneof"`
}

type TCloudResponse_StopInstanceResponse struct {
	StopInstanceResponse *TStopInstanceResponse `protobuf:"bytes,6,opt,name=stop_instance_response,json=stopInstanceResponse,proto3,oneof"`
}

type TCloudResponse_DeployImageResponse struct {
	DeployImageResponse *TDeployImageResponse `protobuf:"bytes,7,opt,name=deploy_image_response,json=deployImageResponse,proto3,oneof"`
}

func (*TCloudResponse_AllocateInstanceResponse) isTCloudResponse_Body() {}

func (*TCloudResponse_DeallocateInstanceResponse) isTCloudResponse_Body() {}

func (*TCloudResponse_ConnectInstanceResponse) isTCloudResponse_Body() {}

func (*TCloudResponse_DisconnectInstanceResponse) isTCloudResponse_Body() {}

func (*TCloudResponse_StartInstanceResponse) isTCloudResponse_Body() {}

func (*TCloudResponse_StopInstanceResponse) isTCloudResponse_Body() {}

func (*TCloudResponse_DeployImageResponse) isTCloudResponse_Body() {}

// make API call to allocate new instance using quota of providing account
// connect allocated instance with user account
// in case of success returns instance UUID
// TODO: describe possible errors
type TAllocateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials     `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	Settings     *TApiSettings         `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	HardwareData *common.THardwareData `protobuf:"bytes,3,opt,name=hardware_data,json=hardwareData,proto3" json:"hardware_data,omitempty"`
}

func (x *TAllocateInstanceRequest) Reset() {
	*x = TAllocateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAllocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAllocateInstanceRequest) ProtoMessage() {}

func (x *TAllocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAllocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*TAllocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{2}
}

func (x *TAllocateInstanceRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TAllocateInstanceRequest) GetSettings() *TApiSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TAllocateInstanceRequest) GetHardwareData() *common.THardwareData {
	if x != nil {
		return x.HardwareData
	}
	return nil
}

type TAllocateInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	InstanceUuid string          `protobuf:"bytes,2,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
}

func (x *TAllocateInstanceResponse) Reset() {
	*x = TAllocateInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAllocateInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAllocateInstanceResponse) ProtoMessage() {}

func (x *TAllocateInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAllocateInstanceResponse.ProtoReflect.Descriptor instead.
func (*TAllocateInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{3}
}

func (x *TAllocateInstanceResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TAllocateInstanceResponse) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

// make API call to deallocate existing instance for providing account
// disconnect instance from user account
// TODO: describe possible errors
type TDeallocateInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	Settings     *TApiSettings     `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	InstanceUuid string            `protobuf:"bytes,3,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
}

func (x *TDeallocateInstanceRequest) Reset() {
	*x = TDeallocateInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeallocateInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeallocateInstanceRequest) ProtoMessage() {}

func (x *TDeallocateInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeallocateInstanceRequest.ProtoReflect.Descriptor instead.
func (*TDeallocateInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{4}
}

func (x *TDeallocateInstanceRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TDeallocateInstanceRequest) GetSettings() *TApiSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TDeallocateInstanceRequest) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

type TDeallocateInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TDeallocateInstanceResponse) Reset() {
	*x = TDeallocateInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeallocateInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeallocateInstanceResponse) ProtoMessage() {}

func (x *TDeallocateInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeallocateInstanceResponse.ProtoReflect.Descriptor instead.
func (*TDeallocateInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{5}
}

func (x *TDeallocateInstanceResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// make API call to ensure existence of instance and correctness of user permissions
// associate instance with user account
// TODO: describe possible errors
type TConnectInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials     `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	Settings     *TApiSettings         `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	HardwareData *common.THardwareData `protobuf:"bytes,3,opt,name=hardware_data,json=hardwareData,proto3" json:"hardware_data,omitempty"`
}

func (x *TConnectInstanceRequest) Reset() {
	*x = TConnectInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConnectInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConnectInstanceRequest) ProtoMessage() {}

func (x *TConnectInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConnectInstanceRequest.ProtoReflect.Descriptor instead.
func (*TConnectInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{6}
}

func (x *TConnectInstanceRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TConnectInstanceRequest) GetSettings() *TApiSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TConnectInstanceRequest) GetHardwareData() *common.THardwareData {
	if x != nil {
		return x.HardwareData
	}
	return nil
}

type TConnectInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result       *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	InstanceUuid string          `protobuf:"bytes,2,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
}

func (x *TConnectInstanceResponse) Reset() {
	*x = TConnectInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TConnectInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TConnectInstanceResponse) ProtoMessage() {}

func (x *TConnectInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TConnectInstanceResponse.ProtoReflect.Descriptor instead.
func (*TConnectInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{7}
}

func (x *TConnectInstanceResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TConnectInstanceResponse) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

// dissociate instance with user account
// TODO: describe possible errors
type TDisconnectInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	InstanceUuid string            `protobuf:"bytes,2,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
}

func (x *TDisconnectInstanceRequest) Reset() {
	*x = TDisconnectInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDisconnectInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDisconnectInstanceRequest) ProtoMessage() {}

func (x *TDisconnectInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDisconnectInstanceRequest.ProtoReflect.Descriptor instead.
func (*TDisconnectInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{8}
}

func (x *TDisconnectInstanceRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TDisconnectInstanceRequest) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

type TDisconnectInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TDisconnectInstanceResponse) Reset() {
	*x = TDisconnectInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDisconnectInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDisconnectInstanceResponse) ProtoMessage() {}

func (x *TDisconnectInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDisconnectInstanceResponse.ProtoReflect.Descriptor instead.
func (*TDisconnectInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{9}
}

func (x *TDisconnectInstanceResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// make API call to start instance connected with user account
// TODO: describe possible errors
type TStartInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	Settings     *TApiSettings     `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	InstanceUuid string            `protobuf:"bytes,3,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
}

func (x *TStartInstanceRequest) Reset() {
	*x = TStartInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartInstanceRequest) ProtoMessage() {}

func (x *TStartInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartInstanceRequest.ProtoReflect.Descriptor instead.
func (*TStartInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{10}
}

func (x *TStartInstanceRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TStartInstanceRequest) GetSettings() *TApiSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TStartInstanceRequest) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

type TStartInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TStartInstanceResponse) Reset() {
	*x = TStartInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStartInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStartInstanceResponse) ProtoMessage() {}

func (x *TStartInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStartInstanceResponse.ProtoReflect.Descriptor instead.
func (*TStartInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{11}
}

func (x *TStartInstanceResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// make API call to stop instance connected with user account
// TODO: describe possible errors
type TStopInstanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	Settings     *TApiSettings     `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	InstanceUuid string            `protobuf:"bytes,3,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
}

func (x *TStopInstanceRequest) Reset() {
	*x = TStopInstanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopInstanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopInstanceRequest) ProtoMessage() {}

func (x *TStopInstanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopInstanceRequest.ProtoReflect.Descriptor instead.
func (*TStopInstanceRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{12}
}

func (x *TStopInstanceRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TStopInstanceRequest) GetSettings() *TApiSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TStopInstanceRequest) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

type TStopInstanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TStopInstanceResponse) Reset() {
	*x = TStopInstanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TStopInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TStopInstanceResponse) ProtoMessage() {}

func (x *TStopInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TStopInstanceResponse.ProtoReflect.Descriptor instead.
func (*TStopInstanceResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{13}
}

func (x *TStopInstanceResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// make API call to deploy docker image on instance connected with user account
// TODO: describe possible errors
type TDeployImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creds        *TUserCredentials `protobuf:"bytes,1,opt,name=creds,proto3" json:"creds,omitempty"`
	Settings     *TApiSettings     `protobuf:"bytes,2,opt,name=settings,proto3" json:"settings,omitempty"`
	InstanceUuid string            `protobuf:"bytes,3,opt,name=instance_uuid,json=instanceUuid,proto3" json:"instance_uuid,omitempty"`
	DockerImage  *TDockerImage     `protobuf:"bytes,4,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
}

func (x *TDeployImageRequest) Reset() {
	*x = TDeployImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeployImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeployImageRequest) ProtoMessage() {}

func (x *TDeployImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeployImageRequest.ProtoReflect.Descriptor instead.
func (*TDeployImageRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{14}
}

func (x *TDeployImageRequest) GetCreds() *TUserCredentials {
	if x != nil {
		return x.Creds
	}
	return nil
}

func (x *TDeployImageRequest) GetSettings() *TApiSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *TDeployImageRequest) GetInstanceUuid() string {
	if x != nil {
		return x.InstanceUuid
	}
	return ""
}

func (x *TDeployImageRequest) GetDockerImage() *TDockerImage {
	if x != nil {
		return x.DockerImage
	}
	return nil
}

type TDeployImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *common.TResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TDeployImageResponse) Reset() {
	*x = TDeployImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDeployImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDeployImageResponse) ProtoMessage() {}

func (x *TDeployImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDeployImageResponse.ProtoReflect.Descriptor instead.
func (*TDeployImageResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{15}
}

func (x *TDeployImageResponse) GetResult() *common.TResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TDockerImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Registry   string `protobuf:"bytes,1,opt,name=registry,proto3" json:"registry,omitempty"`
	Repository string `protobuf:"bytes,2,opt,name=repository,proto3" json:"repository,omitempty"`
	Image      string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Tag        string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (x *TDockerImage) Reset() {
	*x = TDockerImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TDockerImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TDockerImage) ProtoMessage() {}

func (x *TDockerImage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TDockerImage.ProtoReflect.Descriptor instead.
func (*TDockerImage) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{16}
}

func (x *TDockerImage) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

func (x *TDockerImage) GetRepository() string {
	if x != nil {
		return x.Repository
	}
	return ""
}

func (x *TDockerImage) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *TDockerImage) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// container for provider-specific user credentials
type TUserCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*TUserCredentials_AmazonCredentials
	Body isTUserCredentials_Body `protobuf_oneof:"Body"`
}

func (x *TUserCredentials) Reset() {
	*x = TUserCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TUserCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TUserCredentials) ProtoMessage() {}

func (x *TUserCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TUserCredentials.ProtoReflect.Descriptor instead.
func (*TUserCredentials) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{17}
}

func (m *TUserCredentials) GetBody() isTUserCredentials_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *TUserCredentials) GetAmazonCredentials() *TAmazonCredentials {
	if x, ok := x.GetBody().(*TUserCredentials_AmazonCredentials); ok {
		return x.AmazonCredentials
	}
	return nil
}

type isTUserCredentials_Body interface {
	isTUserCredentials_Body()
}

type TUserCredentials_AmazonCredentials struct {
	AmazonCredentials *TAmazonCredentials `protobuf:"bytes,1,opt,name=amazon_credentials,json=amazonCredentials,proto3,oneof"`
}

func (*TUserCredentials_AmazonCredentials) isTUserCredentials_Body() {}

type TAmazonCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessKeyId     string `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
}

func (x *TAmazonCredentials) Reset() {
	*x = TAmazonCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAmazonCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAmazonCredentials) ProtoMessage() {}

func (x *TAmazonCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAmazonCredentials.ProtoReflect.Descriptor instead.
func (*TAmazonCredentials) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{18}
}

func (x *TAmazonCredentials) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *TAmazonCredentials) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

// container for provider-specific api settings
type TApiSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Body:
	//	*TApiSettings_AmazonSettings
	Body isTApiSettings_Body `protobuf_oneof:"Body"`
}

func (x *TApiSettings) Reset() {
	*x = TApiSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TApiSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TApiSettings) ProtoMessage() {}

func (x *TApiSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TApiSettings.ProtoReflect.Descriptor instead.
func (*TApiSettings) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{19}
}

func (m *TApiSettings) GetBody() isTApiSettings_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (x *TApiSettings) GetAmazonSettings() *TAmazonApiSettings {
	if x, ok := x.GetBody().(*TApiSettings_AmazonSettings); ok {
		return x.AmazonSettings
	}
	return nil
}

type isTApiSettings_Body interface {
	isTApiSettings_Body()
}

type TApiSettings_AmazonSettings struct {
	AmazonSettings *TAmazonApiSettings `protobuf:"bytes,1,opt,name=amazon_settings,json=amazonSettings,proto3,oneof"`
}

func (*TApiSettings_AmazonSettings) isTApiSettings_Body() {}

type TAmazonApiSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scheme TAmazonApiSettings_EScheme `protobuf:"varint,1,opt,name=scheme,proto3,enum=cloud.TAmazonApiSettings_EScheme" json:"scheme,omitempty"`
	Region string                     `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
}

func (x *TAmazonApiSettings) Reset() {
	*x = TAmazonApiSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_cloud_cloud_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TAmazonApiSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TAmazonApiSettings) ProtoMessage() {}

func (x *TAmazonApiSettings) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_cloud_cloud_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TAmazonApiSettings.ProtoReflect.Descriptor instead.
func (*TAmazonApiSettings) Descriptor() ([]byte, []int) {
	return file_api_proto_cloud_cloud_proto_rawDescGZIP(), []int{20}
}

func (x *TAmazonApiSettings) GetScheme() TAmazonApiSettings_EScheme {
	if x != nil {
		return x.Scheme
	}
	return TAmazonApiSettings_NONE
}

func (x *TAmazonApiSettings) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

var File_api_proto_cloud_cloud_proto protoreflect.FileDescriptor

var file_api_proto_cloud_cloud_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x95, 0x05, 0x0a, 0x0d, 0x54, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65,
	0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x54, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1b, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x2e, 0x54, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x64,
	0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x51, 0x0a, 0x15, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73,
	0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xab, 0x05, 0x0a, 0x0e, 0x54,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a,
	0x1a, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x66, 0x0a, 0x1c, 0x64, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x44,
	0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x64, 0x65, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x54, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x1c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x1a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57,
	0x0a, 0x17, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x15, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x73, 0x74, 0x6f, 0x70, 0x5f,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x54, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x15, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0xb6, 0x01, 0x0a, 0x18, 0x54, 0x41, 0x6c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x63,
	0x72, 0x65, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54,
	0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x69, 0x0a, 0x19, 0x54, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0xa1, 0x01, 0x0a,
	0x1a, 0x54, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x63,
	0x72, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x73, 0x52, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x22, 0x46, 0x0a, 0x1b, 0x54, 0x44, 0x65, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x17, 0x54, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x55, 0x73, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x63, 0x72,
	0x65, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41,
	0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x12, 0x3a, 0x0a, 0x0d, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x54, 0x48, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0c, 0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x68, 0x0a, 0x18, 0x54, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x70, 0x0a, 0x1a, 0x54, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x63, 0x72, 0x65, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x52, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64, 0x22, 0x46, 0x0a, 0x1b,
	0x54, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x12, 0x2f, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x16, 0x54, 0x53, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9b, 0x01, 0x0a, 0x14, 0x54, 0x53, 0x74, 0x6f, 0x70,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2d, 0x0a, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x12, 0x2f,
	0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x55, 0x75, 0x69, 0x64, 0x22, 0x40, 0x0a, 0x15, 0x54, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd2, 0x01, 0x0a, 0x13, 0x54, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x05, 0x63, 0x72, 0x65, 0x64, 0x73, 0x12, 0x2f, 0x0a,
	0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x2e, 0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0b,
	0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x3f, 0x0a, 0x14, 0x54,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x72, 0x0a, 0x0c,
	0x54, 0x44, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x22, 0x66, 0x0a, 0x10, 0x54, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61,
	0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x64, 0x0a, 0x12, 0x54, 0x41, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x22,
	0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x22, 0x5c,
	0x0a, 0x0c, 0x54, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x44,
	0x0a, 0x0f, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x54, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x64, 0x79, 0x22, 0x91, 0x01, 0x0a,
	0x12, 0x54, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x41, 0x6d, 0x61,
	0x7a, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x45,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x28, 0x0a, 0x07, 0x45, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x54, 0x54, 0x50, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x54, 0x54, 0x50, 0x53, 0x10, 0x02,
	0x32, 0x4e, 0x0a, 0x0d, 0x54, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x3d, 0x0a, 0x08, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x54, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64,
	0x63, 0x2d, 0x6c, 0x61, 0x62, 0x2f, 0x73, 0x6b, 0x79, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_api_proto_cloud_cloud_proto_rawDescOnce sync.Once
	file_api_proto_cloud_cloud_proto_rawDescData = file_api_proto_cloud_cloud_proto_rawDesc
)

func file_api_proto_cloud_cloud_proto_rawDescGZIP() []byte {
	file_api_proto_cloud_cloud_proto_rawDescOnce.Do(func() {
		file_api_proto_cloud_cloud_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_cloud_cloud_proto_rawDescData)
	})
	return file_api_proto_cloud_cloud_proto_rawDescData
}

var file_api_proto_cloud_cloud_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_cloud_cloud_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_cloud_cloud_proto_goTypes = []interface{}{
	(TAmazonApiSettings_EScheme)(0),     // 0: cloud.TAmazonApiSettings.EScheme
	(*TCloudRequest)(nil),               // 1: cloud.TCloudRequest
	(*TCloudResponse)(nil),              // 2: cloud.TCloudResponse
	(*TAllocateInstanceRequest)(nil),    // 3: cloud.TAllocateInstanceRequest
	(*TAllocateInstanceResponse)(nil),   // 4: cloud.TAllocateInstanceResponse
	(*TDeallocateInstanceRequest)(nil),  // 5: cloud.TDeallocateInstanceRequest
	(*TDeallocateInstanceResponse)(nil), // 6: cloud.TDeallocateInstanceResponse
	(*TConnectInstanceRequest)(nil),     // 7: cloud.TConnectInstanceRequest
	(*TConnectInstanceResponse)(nil),    // 8: cloud.TConnectInstanceResponse
	(*TDisconnectInstanceRequest)(nil),  // 9: cloud.TDisconnectInstanceRequest
	(*TDisconnectInstanceResponse)(nil), // 10: cloud.TDisconnectInstanceResponse
	(*TStartInstanceRequest)(nil),       // 11: cloud.TStartInstanceRequest
	(*TStartInstanceResponse)(nil),      // 12: cloud.TStartInstanceResponse
	(*TStopInstanceRequest)(nil),        // 13: cloud.TStopInstanceRequest
	(*TStopInstanceResponse)(nil),       // 14: cloud.TStopInstanceResponse
	(*TDeployImageRequest)(nil),         // 15: cloud.TDeployImageRequest
	(*TDeployImageResponse)(nil),        // 16: cloud.TDeployImageResponse
	(*TDockerImage)(nil),                // 17: cloud.TDockerImage
	(*TUserCredentials)(nil),            // 18: cloud.TUserCredentials
	(*TAmazonCredentials)(nil),          // 19: cloud.TAmazonCredentials
	(*TApiSettings)(nil),                // 20: cloud.TApiSettings
	(*TAmazonApiSettings)(nil),          // 21: cloud.TAmazonApiSettings
	(*common.THardwareData)(nil),        // 22: entity.THardwareData
	(*common.TResult)(nil),              // 23: action.TResult
}
var file_api_proto_cloud_cloud_proto_depIdxs = []int32{
	3,  // 0: cloud.TCloudRequest.allocate_instance_request:type_name -> cloud.TAllocateInstanceRequest
	5,  // 1: cloud.TCloudRequest.deallocate_instance_request:type_name -> cloud.TDeallocateInstanceRequest
	7,  // 2: cloud.TCloudRequest.connect_instance_request:type_name -> cloud.TConnectInstanceRequest
	9,  // 3: cloud.TCloudRequest.disconnect_instance_request:type_name -> cloud.TDisconnectInstanceRequest
	11, // 4: cloud.TCloudRequest.start_instance_request:type_name -> cloud.TStartInstanceRequest
	13, // 5: cloud.TCloudRequest.stop_instance_request:type_name -> cloud.TStopInstanceRequest
	15, // 6: cloud.TCloudRequest.deploy_image_request:type_name -> cloud.TDeployImageRequest
	4,  // 7: cloud.TCloudResponse.allocate_instance_response:type_name -> cloud.TAllocateInstanceResponse
	6,  // 8: cloud.TCloudResponse.deallocate_instance_response:type_name -> cloud.TDeallocateInstanceResponse
	8,  // 9: cloud.TCloudResponse.connect_instance_response:type_name -> cloud.TConnectInstanceResponse
	10, // 10: cloud.TCloudResponse.disconnect_instance_response:type_name -> cloud.TDisconnectInstanceResponse
	12, // 11: cloud.TCloudResponse.start_instance_response:type_name -> cloud.TStartInstanceResponse
	14, // 12: cloud.TCloudResponse.stop_instance_response:type_name -> cloud.TStopInstanceResponse
	16, // 13: cloud.TCloudResponse.deploy_image_response:type_name -> cloud.TDeployImageResponse
	18, // 14: cloud.TAllocateInstanceRequest.creds:type_name -> cloud.TUserCredentials
	20, // 15: cloud.TAllocateInstanceRequest.settings:type_name -> cloud.TApiSettings
	22, // 16: cloud.TAllocateInstanceRequest.hardware_data:type_name -> entity.THardwareData
	23, // 17: cloud.TAllocateInstanceResponse.result:type_name -> action.TResult
	18, // 18: cloud.TDeallocateInstanceRequest.creds:type_name -> cloud.TUserCredentials
	20, // 19: cloud.TDeallocateInstanceRequest.settings:type_name -> cloud.TApiSettings
	23, // 20: cloud.TDeallocateInstanceResponse.result:type_name -> action.TResult
	18, // 21: cloud.TConnectInstanceRequest.creds:type_name -> cloud.TUserCredentials
	20, // 22: cloud.TConnectInstanceRequest.settings:type_name -> cloud.TApiSettings
	22, // 23: cloud.TConnectInstanceRequest.hardware_data:type_name -> entity.THardwareData
	23, // 24: cloud.TConnectInstanceResponse.result:type_name -> action.TResult
	18, // 25: cloud.TDisconnectInstanceRequest.creds:type_name -> cloud.TUserCredentials
	23, // 26: cloud.TDisconnectInstanceResponse.result:type_name -> action.TResult
	18, // 27: cloud.TStartInstanceRequest.creds:type_name -> cloud.TUserCredentials
	20, // 28: cloud.TStartInstanceRequest.settings:type_name -> cloud.TApiSettings
	23, // 29: cloud.TStartInstanceResponse.result:type_name -> action.TResult
	18, // 30: cloud.TStopInstanceRequest.creds:type_name -> cloud.TUserCredentials
	20, // 31: cloud.TStopInstanceRequest.settings:type_name -> cloud.TApiSettings
	23, // 32: cloud.TStopInstanceResponse.result:type_name -> action.TResult
	18, // 33: cloud.TDeployImageRequest.creds:type_name -> cloud.TUserCredentials
	20, // 34: cloud.TDeployImageRequest.settings:type_name -> cloud.TApiSettings
	17, // 35: cloud.TDeployImageRequest.docker_image:type_name -> cloud.TDockerImage
	23, // 36: cloud.TDeployImageResponse.result:type_name -> action.TResult
	19, // 37: cloud.TUserCredentials.amazon_credentials:type_name -> cloud.TAmazonCredentials
	21, // 38: cloud.TApiSettings.amazon_settings:type_name -> cloud.TAmazonApiSettings
	0,  // 39: cloud.TAmazonApiSettings.scheme:type_name -> cloud.TAmazonApiSettings.EScheme
	1,  // 40: cloud.TCloudManager.DoAction:input_type -> cloud.TCloudRequest
	2,  // 41: cloud.TCloudManager.DoAction:output_type -> cloud.TCloudResponse
	41, // [41:42] is the sub-list for method output_type
	40, // [40:41] is the sub-list for method input_type
	40, // [40:40] is the sub-list for extension type_name
	40, // [40:40] is the sub-list for extension extendee
	0,  // [0:40] is the sub-list for field type_name
}

func init() { file_api_proto_cloud_cloud_proto_init() }
func file_api_proto_cloud_cloud_proto_init() {
	if File_api_proto_cloud_cloud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_cloud_cloud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCloudRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TCloudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAllocateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAllocateInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeallocateInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeallocateInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConnectInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TConnectInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDisconnectInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDisconnectInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStartInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopInstanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TStopInstanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeployImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDeployImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TDockerImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TUserCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAmazonCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TApiSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_cloud_cloud_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TAmazonApiSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_cloud_cloud_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*TCloudRequest_AllocateInstanceRequest)(nil),
		(*TCloudRequest_DeallocateInstanceRequest)(nil),
		(*TCloudRequest_ConnectInstanceRequest)(nil),
		(*TCloudRequest_DisconnectInstanceRequest)(nil),
		(*TCloudRequest_StartInstanceRequest)(nil),
		(*TCloudRequest_StopInstanceRequest)(nil),
		(*TCloudRequest_DeployImageRequest)(nil),
	}
	file_api_proto_cloud_cloud_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TCloudResponse_AllocateInstanceResponse)(nil),
		(*TCloudResponse_DeallocateInstanceResponse)(nil),
		(*TCloudResponse_ConnectInstanceResponse)(nil),
		(*TCloudResponse_DisconnectInstanceResponse)(nil),
		(*TCloudResponse_StartInstanceResponse)(nil),
		(*TCloudResponse_StopInstanceResponse)(nil),
		(*TCloudResponse_DeployImageResponse)(nil),
	}
	file_api_proto_cloud_cloud_proto_msgTypes[17].OneofWrappers = []interface{}{
		(*TUserCredentials_AmazonCredentials)(nil),
	}
	file_api_proto_cloud_cloud_proto_msgTypes[19].OneofWrappers = []interface{}{
		(*TApiSettings_AmazonSettings)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_cloud_cloud_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_cloud_cloud_proto_goTypes,
		DependencyIndexes: file_api_proto_cloud_cloud_proto_depIdxs,
		EnumInfos:         file_api_proto_cloud_cloud_proto_enumTypes,
		MessageInfos:      file_api_proto_cloud_cloud_proto_msgTypes,
	}.Build()
	File_api_proto_cloud_cloud_proto = out.File
	file_api_proto_cloud_cloud_proto_rawDesc = nil
	file_api_proto_cloud_cloud_proto_goTypes = nil
	file_api_proto_cloud_cloud_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TCloudManagerClient is the client API for TCloudManager service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TCloudManagerClient interface {
	DoAction(ctx context.Context, opts ...grpc.CallOption) (TCloudManager_DoActionClient, error)
}

type tCloudManagerClient struct {
	cc grpc.ClientConnInterface
}

func NewTCloudManagerClient(cc grpc.ClientConnInterface) TCloudManagerClient {
	return &tCloudManagerClient{cc}
}

func (c *tCloudManagerClient) DoAction(ctx context.Context, opts ...grpc.CallOption) (TCloudManager_DoActionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TCloudManager_serviceDesc.Streams[0], "/cloud.TCloudManager/DoAction", opts...)
	if err != nil {
		return nil, err
	}
	x := &tCloudManagerDoActionClient{stream}
	return x, nil
}

type TCloudManager_DoActionClient interface {
	Send(*TCloudRequest) error
	Recv() (*TCloudResponse, error)
	grpc.ClientStream
}

type tCloudManagerDoActionClient struct {
	grpc.ClientStream
}

func (x *tCloudManagerDoActionClient) Send(m *TCloudRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *tCloudManagerDoActionClient) Recv() (*TCloudResponse, error) {
	m := new(TCloudResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TCloudManagerServer is the server API for TCloudManager service.
type TCloudManagerServer interface {
	DoAction(TCloudManager_DoActionServer) error
}

// UnimplementedTCloudManagerServer can be embedded to have forward compatible implementations.
type UnimplementedTCloudManagerServer struct {
}

func (*UnimplementedTCloudManagerServer) DoAction(TCloudManager_DoActionServer) error {
	return status.Errorf(codes.Unimplemented, "method DoAction not implemented")
}

func RegisterTCloudManagerServer(s *grpc.Server, srv TCloudManagerServer) {
	s.RegisterService(&_TCloudManager_serviceDesc, srv)
}

func _TCloudManager_DoAction_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TCloudManagerServer).DoAction(&tCloudManagerDoActionServer{stream})
}

type TCloudManager_DoActionServer interface {
	Send(*TCloudResponse) error
	Recv() (*TCloudRequest, error)
	grpc.ServerStream
}

type tCloudManagerDoActionServer struct {
	grpc.ServerStream
}

func (x *tCloudManagerDoActionServer) Send(m *TCloudResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *tCloudManagerDoActionServer) Recv() (*TCloudRequest, error) {
	m := new(TCloudRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _TCloudManager_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.TCloudManager",
	HandlerType: (*TCloudManagerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DoAction",
			Handler:       _TCloudManager_DoAction_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "api/proto/cloud/cloud.proto",
}
